{"version":3,"sources":["gulp.conf.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;AAQA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,QAAQ,QAAQ,WAAR,CAAd;;AAEA;;;AAGA,QAAQ,KAAR,GAAgB;AACd,OAAK,KADS;AAEd,QAAM,MAFQ;AAGd,OAAK,MAHS;AAId,OAAK,KAJS;AAKd,SAAO;AALO,CAAhB;;AAQA,QAAQ,IAAR,GAAe,EAAf;;2BACW,Q;AACT,MAAI,QAAQ,KAAR,CAAc,cAAd,CAA6B,QAA7B,CAAJ,EAA4C;AAC1C,YAAQ,IAAR,CAAa,QAAb,IAAyB,SAAS,QAAT,GAAoB;AAC3C,UAAM,YAAY,QAAQ,KAAR,CAAc,QAAd,CAAlB;AACA,UAAM,WAAW,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAjB;AACA,UAAM,WAAW,CAAC,SAAD,EAAY,MAAZ,CAAmB,QAAnB,CAAjB;AACA,aAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,QAAtB,CAAP;AACD,KALD;AAMD;;;AARH,KAAK,IAAM,QAAX,IAAuB,QAAQ,KAA/B,EAAsC;AAAA,QAA3B,QAA2B;AASrC;;AAED;;;AAGA,QAAQ,YAAR,GAAuB,UAAU,KAAV,EAAiB;AACtC,SAAO,UAAU,GAAV,EAAe;AACpB,UAAM,GAAN,CAAU,MAAM,MAAN,CAAa,GAAb,OAAqB,KAArB,OAAV,EAA0C,IAAI,QAAJ,EAA1C;AACA,SAAK,IAAL,CAAU,KAAV;AACD,GAHD;AAID,CALD","file":"gulp.conf-compiled.js","sourcesContent":["'use strict';\n\n/**\n *  This file contains the variables used in other gulp files\n *  which defines tasks\n *  By design, we only put there very generic config values\n *  which are used in several places to keep good readability\n *  of the tasks\n */\n\nconst path = require('path');\nconst gutil = require('gulp-util');\n\n/**\n *  The main paths of your project handle these with care\n */\nexports.paths = {\n  src: 'src',\n  dist: 'dist',\n  tmp: '.tmp',\n  e2e: 'e2e',\n  tasks: 'gulp_tasks'\n};\n\nexports.path = {};\nfor (const pathName in exports.paths) {\n  if (exports.paths.hasOwnProperty(pathName)) {\n    exports.path[pathName] = function pathJoin() {\n      const pathValue = exports.paths[pathName];\n      const funcArgs = Array.prototype.slice.call(arguments);\n      const joinArgs = [pathValue].concat(funcArgs);\n      return path.join.apply(this, joinArgs);\n    };\n  }\n}\n\n/**\n *  Common implementation for an error handler of a Gulp plugin\n */\nexports.errorHandler = function (title) {\n  return function (err) {\n    gutil.log(gutil.colors.red(`[${title}]`), err.toString());\n    this.emit('end');\n  };\n};\n"]}