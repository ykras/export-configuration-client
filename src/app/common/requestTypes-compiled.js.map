{"version":3,"sources":["requestTypes.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AAEA,IAAM,uBAAuB,yBAAU;AACrC,mBAAiB,IADoB;AAErC,4BAA0B,IAFW;AAGrC,4BAA0B,IAHW;AAIrC,8BAA4B,IAJS;AAKrC,gCAA8B,IALO;AAMrC,sBAAoB,IANiB;AAOrC,oCAAkC,IAPG;AAQrC,2BAAyB,IARY;AASrC,+BAA6B,IATQ;AAUrC,qCAAmC,IAVE;AAWrC,uCAAqC,IAXA;AAYrC,kCAAgC,IAZK;AAarC,oCAAkC,IAbG;AAcrC,0BAAwB,IAda;AAerC,4BAA0B,IAfW;AAgBrC,kCAAgC,IAhBK;AAiBrC,oCAAkC,IAjBG;AAkBrC,2BAAyB,IAlBY;AAmBrC,mCAAiC,IAnBI;AAoBrC,yBAAuB,IApBc;AAqBrC,2BAAyB,IArBY;AAsBrC,2BAAyB,IAtBY;AAuBrC,yBAAuB,IAvBc;AAwBrC,2BAAyB,IAxBY;AAyBrC,iCAA+B,IAzBM;AA0BrC,uCAAqC,IA1BA;AA2BrC,yCAAuC,IA3BF;AA4BrC,oCAAkC,IA5BG;AA6BrC,sCAAoC,IA7BC;AA8BrC,yBAAuB,IA9Bc;AA+BrC,2BAAyB,IA/BY;AAgCrC,uBAAqB;AAhCgB,CAAV,CAA7B;;AAmCA,IAAM,sBAAsB;AAC1B,qBAAmB;AAAA,kCAAqC,YAArC;AAAA,GADO;AAE1B,uBAAqB;AAAA,oCAAuC,YAAvC;AAAA,GAFK;AAG1B,gBAAc;AAAA,6BAAgC,YAAhC;AAAA,GAHY;AAI1B,eAAa;AAAA,4BAAkC,eAAlC;AAAA,GAJa;AAK1B,mBAAiB;AAAA,gCAAsC,eAAtC;AAAA,GALS;AAM1B,qBAAmB;AAAA,kCAAwC,eAAxC;AAAA,GANO;AAO1B,8BAA4B;AAAA,2CAAiD,eAAjD;AAAA,GAPF;AAQ1B,+BAA6B,qCAAC,eAAD,EAAkB,kBAAlB;AAAA,4CACI,eADJ,SACuB,kBADvB;AAAA,GARH;AAU1B,4BAA0B;AAAA,yCAA+C,eAA/C;AAAA,GAVA;AAW1B,6BAA2B;AAAA,0CAAgD,eAAhD;AAAA,GAXD;AAY1B,6BAA2B;AAAA,0CAA+C,cAA/C;AAAA,GAZD;AAa1B,6BAA2B;AAAA,0CAA+C,cAA/C;AAAA,GAbD;AAc1B,yBAAuB;AAAA,sCAA4C,eAA5C;AAAA,GAdG;AAe1B,yBAAuB;AAAA,sCAAuC,UAAvC;AAAA,GAfG;AAgB1B,wBAAsB;AAAA,qCAA2C,eAA3C;AAAA,GAhBI;AAiB1B,6BAA2B;AAAA,0CAAgD,eAAhD;AAAA,GAjBD;AAkB1B,yBAAuB;AAAA,sCAAuC,UAAvC;AAAA,GAlBG;AAmB1B,uBAAqB;AAAA,oCAA+C,oBAA/C;AAAA,GAnBK;AAoB1B,oBAAkB;AAAA,iCAA4C,oBAA5C;AAAA,GApBQ;AAqB1B,sBAAoB;AAAA,mCAA8C,oBAA9C;AAAA;AArBM,CAA5B;;kBAwBe,kBAAM,oBAAN,EAA4B,mBAA5B,C","file":"requestTypes-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport keyMirror from 'keymirror';\r\nimport {merge} from 'ramda';\r\n\r\nconst requestTypeConstants = keyMirror({\r\n  ReadExportTypes: null,\r\n  ReadSelectedExportTypeId: null,\r\n  UpdateSelectedExportType: null,\r\n  ReadExportPotokPlusEnabled: null,\r\n  UpdateExportPotokPlusEnabled: null,\r\n  ReadViolationTypes: null,\r\n  ReadForegroundCollageObjectTypes: null,\r\n  ReadCollageSettingTypes: null,\r\n  ReadCollageVideoExportModes: null,\r\n  ReadCollageCurrentVideoExportMode: null,\r\n  UpdateCollageCurrentVideoExportMode: null,\r\n  ReadCollageVideoExportSettings: null,\r\n  UpdateCollageVideoExportSettings: null,\r\n  ReadCollageDefaultFont: null,\r\n  UpdateCollageDefaultFont: null,\r\n  ReadCollageDefaultFontPriority: null,\r\n  UpdateCollageDefaultFontPriority: null,\r\n  ReadCollagePictureTypes: null,\r\n  SaveCurrentCollageConfiguration: null,\r\n  ReadCollageExportPath: null,\r\n  UpdateCollageExportPath: null,\r\n  ReadRecognitionChannels: null,\r\n  ReadVocordTefSettings: null,\r\n  UpdateVocordTefSettings: null,\r\n  ReadVocordTefVideoExportModes: null,\r\n  ReadVocordTefCurrentVideoExportMode: null,\r\n  UpdateVocordTefCurrentVideoExportMode: null,\r\n  ReadVocordTefVideoExportSettings: null,\r\n  UpdateVocordTefVideoExportSettings: null,\r\n  ReadPotokPlusSettings: null,\r\n  UpdatePotokPlusSettings: null,\r\n  ReadExportStatistic: null\r\n});\r\n\r\nconst requestTypeCreators = {\r\n  readExportEnabled: exportTypeId => `ReadExportEnabled/${exportTypeId}`,\r\n  updateExportEnabled: exportTypeId => `UpdateExportEnabled/${exportTypeId}`,\r\n  repeatExport: exportTypeId => `RepeatExport/${exportTypeId}`,\r\n  readCollage: violationTypeId => `ReadCollage/${violationTypeId}`,\r\n  readCollageFont: violationTypeId => `ReadCollageFont/${violationTypeId}`,\r\n  updateCollageFont: violationTypeId => `UpdateCollageFont/${violationTypeId}`,\r\n  readCollageFooterTemplates: violationTypeId => `ReadCollageFooterTemplates/${violationTypeId}`,\r\n  updateCollageFooterTemplate: (violationTypeId, collagePictureType) =>\r\n    `UpdateCollageFooterTemplate/${violationTypeId}/${collagePictureType}`,\r\n  readCollageTrafficLights: violationTypeId => `ReadCollageTrafficLights/${violationTypeId}`,\r\n  createCollageTrafficLight: violationTypeId => `CreateCollageTrafficLight/${violationTypeId}`,\r\n  deleteCollageTrafficLight: trafficLightId => `DeleteCollageTrafficLight/${trafficLightId}`,\r\n  updateCollageTrafficLight: trafficLightId => `UpdateCollageTrafficLight/${trafficLightId}`,\r\n  createCollageRoadSign: violationTypeId => `CreateCollageRoadSign/${violationTypeId}`,\r\n  deleteCollageRoadSign: roadSignId => `DeleteCollageRoadSign/${roadSignId}`,\r\n  readCollageRoadSigns: violationTypeId => `ReadCollageRoadSigns/${violationTypeId}`,\r\n  uploadCollageRoadSignFile: violationTypeId => `UploadCollageRoadSignFile/${violationTypeId}`,\r\n  updateCollageRoadSign: roadSignId => `UpdateCollageRoadSign/${roadSignId}`,\r\n  readOverviewPicture: recognitionChannelId => `ReadOverviewPicture/${recognitionChannelId}`,\r\n  readTrafficLight: recognitionChannelId => `ReadTrafficLight/${recognitionChannelId}`,\r\n  updateTrafficLight: recognitionChannelId => `UpdateTrafficLight/${recognitionChannelId}`\r\n};\r\n\r\nexport default merge(requestTypeConstants, requestTypeCreators);\r\n"]}