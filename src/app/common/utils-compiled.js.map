{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;;;;;;AAEA;;AACA;;;;;;AAEO,IAAM,4CAAkB,SAAlB,eAAkB,GAAiB;AAAA,oCAAb,QAAa;AAAb,YAAa;AAAA;;AAC9C,MAAM,qBAAqB,uBAAU,QAAV,EAAoB;AAAA,WAAW,QAAQ,MAAR,KAAmB,sBAAO,OAArC;AAAA,GAApB,CAA3B;AACA,MAAI,qBAAqB,CAAC,CAA1B,EAA6B;AAC3B,WAAO,EAAC,QAAQ,sBAAO,OAAhB,EAAyB,OAAO,SAAS,kBAAT,EAA6B,KAA7D,EAAP;AACD;AACD,MAAI,SAAS,KAAT,CAAe;AAAA,WAAW,QAAQ,MAAR,KAAmB,sBAAO,OAArC;AAAA,GAAf,CAAJ,EAAkE;AAChE,WAAO,EAAC,QAAQ,sBAAO,OAAhB,EAAyB,OAAO,IAAhC,EAAP;AACD;AACD,SAAO,EAAC,QAAQ,sBAAO,OAAhB,EAAyB,OAAO,IAAhC,EAAP;AACD,CATM","file":"utils-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport {findIndex} from 'lodash';\r\nimport status from '../common/statusTypes';\r\n\r\nexport const combineRequests = (...requests) => {\r\n  const failedRequestIndex = findIndex(requests, request => request.status === status.Failure);\r\n  if (failedRequestIndex > -1) {\r\n    return {status: status.Failure, error: requests[failedRequestIndex].error};\r\n  }\r\n  if (requests.every(request => request.status === status.Success)) {\r\n    return {status: status.Success, error: null};\r\n  }\r\n  return {status: status.Pending, error: null};\r\n};\r\n"]}