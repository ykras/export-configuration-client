{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAM,2BAA2B,kBAAM,UAAC,cAAD,EAAiB,SAAjB;AAAA;AAAA;;AACrC,sBAAqB;AAAA;;AAAA;;AAAA,wCAAN,IAAM;AAAN,YAAM;AAAA;;AAAA,6IACV,IADU;;AAEnB,YAAK,aAAL,GAAqB,SAArB;AACA,YAAK,gBAAL,GAAwB,MAAK,gBAAL,CAAsB,IAAtB,OAAxB;AACA,YAAK,2BAAL,GAAmC,MAAK,2BAAL,CAAiC,IAAjC,OAAnC;AAJmB;AAKpB;;AANoC;AAAA;AAAA,+BAQ5B;AACP,eACE,8BAAC,SAAD,eAAe,KAAK,KAApB,IAA2B,KAAK,KAAK,gBAArC,IADF;AAGD;AAZoC;AAAA;AAAA,0CAcjB;AAClB,iBAAS,gBAAT,CAA0B,OAA1B,EAAmC,KAAK,2BAAxC,EAAqE,IAArE;AACD;AAhBoC;AAAA;AAAA,6CAkBd;AACrB,iBAAS,mBAAT,CAA6B,OAA7B,EAAsC,KAAK,2BAA3C,EAAwE,IAAxE;AACD;AApBoC;AAAA;AAAA,uCAsBpB,IAtBoB,EAsBd;AACrB,aAAK,aAAL,GAAqB,IAArB;AACD;AAxBoC;AAAA;AAAA,yCA0BlB;AACjB,YAAI,aAAJ;AACA,YAAI,KAAK,aAAT,EAAwB;AACtB,iBAAO,KAAK,aAAL,CAAmB,gBAAnB,GACL,mBAAS,WAAT,CAAqB,KAAK,aAA1B,CADK,GACsC,KAAK,aADlD;AAED;AACD,eAAO,IAAP;AACD;AAjCoC;AAAA;AAAA,kDAmCT,CAnCS,EAmCN;AAC7B,YAAM,gBAAgB,KAAK,gBAAL,EAAtB;AACA,YAAI,CAAC,aAAD,IAAkB,cAAc,QAAd,CAAuB,EAAE,MAAzB,CAAtB,EAAwD;AACtD;AACD;AACD,uBAAe,CAAf,EAAkB,KAAK,KAAvB;AACD;AAzCoC;;AAAA;AAAA,IAA6C,gBAAM,SAAnD;AAAA,CAAN,CAAjC;;kBA4Ce,wB","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {curry} from 'ramda';\r\n\r\nconst withOutsideClickHandling = curry((onOutsideClick, Component) => class extends React.Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.componentArea = undefined;\r\n    this.setComponentArea = this.setComponentArea.bind(this);\r\n    this.handleClickOutsideComponent = this.handleClickOutsideComponent.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Component {...this.props} ref={this.setComponentArea}/>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.handleClickOutsideComponent, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutsideComponent, true);\r\n  }\r\n\r\n  setComponentArea(area) {\r\n    this.componentArea = area;\r\n  }\r\n\r\n  getComponentArea() {\r\n    let area;\r\n    if (this.componentArea) {\r\n      area = this.componentArea.isReactComponent ?\r\n        ReactDOM.findDOMNode(this.componentArea) : this.componentArea;\r\n    }\r\n    return area;\r\n  }\r\n\r\n  handleClickOutsideComponent(e) {\r\n    const componentArea = this.getComponentArea();\r\n    if (!componentArea || componentArea.contains(e.target)) {\r\n      return;\r\n    }\r\n    onOutsideClick(e, this.props);\r\n  }\r\n});\r\n\r\nexport default withOutsideClickHandling;\r\n"]}