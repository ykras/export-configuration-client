{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './CollageSettingValueEditor.css';\r\nimport localizedStrings, {localizeItems} from '../../localization';\r\nimport {capitalize, toNumber, isNumber, isEqual, some} from 'lodash';\r\nimport ids from '../../store/identifiers';\r\nimport actionCreators from '../../store/actions';\r\nimport selectors from '../../store/selectors';\r\nimport Selector from '../Selector';\r\nimport {baseUrl} from '../../api';\r\nimport TextInput from '../TextInput';\r\nimport FontEditor from '../FontEditor';\r\nimport FooterTemplateEditor from '../FooterTemplateEditor';\r\nimport {settingIdsToCollagePictureTypesMap} from '../../common/collagePictureTypes';\r\nimport base64 from 'base64-js';\r\nimport CollageTrafficLightEditor from '../CollageTrafficLightEditor';\r\nimport RoadSignEditor from '../RoadSignEditor';\r\n\r\nconst selectorItems = props => {\r\n  const {settingId, videoExportModes} = props;\r\n  switch (settingId) {\r\n    case ids.VideoExportModeSettingId:\r\n      return localizeItems(videoExportModes, capitalize);\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nconst selectItem = props => {\r\n  const {settingId, selectCollageVideoExportMode} = props;\r\n  switch (settingId) {\r\n    case ids.VideoExportModeSettingId:\r\n      return (...args) => {\r\n        const [videoExportModeId] = args;\r\n        selectCollageVideoExportMode(videoExportModeId);\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst selectedItemId = props => {\r\n  const {settingId, selectedVideoExportModeId} = props;\r\n  switch (settingId) {\r\n    case ids.VideoExportModeSettingId:\r\n      return selectedVideoExportModeId;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst defaultText = props => {\r\n  const {settingId, videoSecondsBeforeCheckTime, videoSecondsAfterCheckTime, settingValue} = props;\r\n  switch (settingId) {\r\n    case ids.VideoSecondsBeforeCheckTimeSettingId:\r\n      return `${videoSecondsBeforeCheckTime}`;\r\n    case ids.VideoSecondsAfterCheckTimeSettingId:\r\n      return `${videoSecondsAfterCheckTime}`;\r\n    case ids.CollageExportPathSettingId:\r\n      return settingValue;\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst editText = props => {\r\n  const {settingId, videoSecondsBeforeCheckTime, videoSecondsAfterCheckTime,\r\n    updateCollageVideoSecondsBeforeCheckTime, updateCollageVideoSecondsAfterCheckTime,\r\n    updateCollageExportPath, settingValue} = props;\r\n  switch (settingId) {\r\n    case ids.VideoSecondsBeforeCheckTimeSettingId:\r\n      return seconds => {\r\n        const secondsNum = toNumber(seconds);\r\n        if (secondsNum !== videoSecondsBeforeCheckTime) {\r\n          updateCollageVideoSecondsBeforeCheckTime(secondsNum);\r\n        }\r\n      };\r\n    case ids.VideoSecondsAfterCheckTimeSettingId:\r\n      return seconds => {\r\n        const secondsNum = toNumber(seconds);\r\n        if (secondsNum !== videoSecondsAfterCheckTime) {\r\n          updateCollageVideoSecondsAfterCheckTime(secondsNum);\r\n        }\r\n      };\r\n    case ids.CollageExportPathSettingId:\r\n      return exportPath => {\r\n        if (exportPath !== settingValue) {\r\n          updateCollageExportPath(exportPath);\r\n        }\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst defaultValueObject = props => {\r\n  const {settingId, settingValue, violationTypeId} = props;\r\n  switch (settingId.split('/')[0]) {\r\n    case ids.CollageDefaultFontSettingId: {\r\n      const value = settingValue || {name: '', sizeInPoints: ''};\r\n      return {fontName: value.name, fontSize: `${value.sizeInPoints}`};\r\n    }\r\n    case ids.CollageViolationFontSettingId: {\r\n      const value = settingValue[violationTypeId] || {name: '', sizeInPoints: ''};\r\n      return {fontName: value.name, fontSize: `${value.sizeInPoints}`};\r\n    }\r\n    case ids.CollageTrafficLightSettingId:\r\n    case ids.CollageRoadSignSettingId:\r\n      return settingValue;\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nconst editValueObject = props => {\r\n  const {settingId, settingValue, updateCollageDefaultFont, requestUpdateCollageDefaultFont,\r\n    updateCollageFont, requestUpdateCollageFont, violationTypeId, requestReadCollage,\r\n    updateCollageTrafficLight, updateCollageRoadSign} = props;\r\n  switch (settingId.split('/')[0]) {\r\n    case ids.CollageDefaultFontSettingId:\r\n      return value => {\r\n        const currentDefaultFont = settingValue;\r\n        const newDefaultFont = {name: value.fontName, sizeInPoints: toNumber(value.fontSize)};\r\n        if (!isEqual(newDefaultFont, currentDefaultFont)) {\r\n          requestUpdateCollageDefaultFont(baseUrl, newDefaultFont)\r\n            .then(() => updateCollageDefaultFont(newDefaultFont))\r\n            .then(() => requestReadCollage(baseUrl, violationTypeId));\r\n        }\r\n      };\r\n    case ids.CollageViolationFontSettingId:\r\n      return value => {\r\n        const currentFont = settingValue[violationTypeId];\r\n        const newFont = {name: value.fontName, sizeInPoints: toNumber(value.fontSize)};\r\n        if (!isEqual(newFont, currentFont)) {\r\n          requestUpdateCollageFont(baseUrl, violationTypeId, newFont)\r\n            .then(() => updateCollageFont(newFont))\r\n            .then(() => requestReadCollage(baseUrl, violationTypeId));\r\n        }\r\n      };\r\n    case ids.CollageTrafficLightSettingId:\r\n      return value => {\r\n        const curTrafficLight = settingValue;\r\n        const newTrafficLight = value;\r\n        if (!isEqual(newTrafficLight, curTrafficLight)) {\r\n          updateCollageTrafficLight(settingId, {...newTrafficLight, stale: true});\r\n        }\r\n      };\r\n    case ids.CollageRoadSignSettingId:\r\n      return value => {\r\n        const curRoadSign = settingValue;\r\n        const newRoadSign = value;\r\n        if (!isEqual(newRoadSign, curRoadSign)) {\r\n          updateCollageRoadSign(settingId, {...newRoadSign, stale: true});\r\n        }\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst applyValueObject = props => {\r\n  const {settingId, requestReadCollage, violationTypeId,\r\n    requestUpdateCollageTrafficLight, updateCollageTrafficLight,\r\n    requestUpdateCollageRoadSign, updateCollageRoadSign} = props;\r\n  switch (settingId.split('/')[0]) {\r\n    case ids.CollageTrafficLightSettingId:\r\n      return value => {\r\n        const newTrafficLight = value;\r\n        const [, , trafficLightId] = settingId.split('/');\r\n        requestUpdateCollageTrafficLight(baseUrl, trafficLightId, newTrafficLight)\r\n          .then(() => updateCollageTrafficLight(settingId, {...newTrafficLight, stale: false}))\r\n          .then(() => {\r\n            if (some(newTrafficLight, param => isNumber(param) && param > 0)) {\r\n              requestReadCollage(baseUrl, violationTypeId);\r\n            }\r\n          });\r\n      };\r\n    case ids.CollageRoadSignSettingId:\r\n      return value => {\r\n        const newRoadSign = value;\r\n        const [, , roadSignId] = settingId.split('/');\r\n        requestUpdateCollageRoadSign(baseUrl, roadSignId, newRoadSign)\r\n          .then(() => updateCollageRoadSign(settingId, {...newRoadSign, stale: false}))\r\n          .then(() => {\r\n            if (some(newRoadSign, param => isNumber(param) && param > 0)) {\r\n              requestReadCollage(baseUrl, violationTypeId);\r\n            }\r\n          });\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst defaultValueArray = props => {\r\n  const {settingId, settingValue} = props;\r\n  switch (settingId.split('/')[0]) {\r\n    case ids.VehicleDetectionFrameFooterTemplateSettingId:\r\n    case ids.OverviewBeginFooterTemplateSettingId:\r\n    case ids.VehicleDetectionBeginFooterTemplateSettingId:\r\n    case ids.OverviewEndFooterTemplateSettingId:\r\n    case ids.VehicleDetectionEndFooterTemplateSettingId:\r\n      return settingValue;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nconst getCollagePictureType = settingId => {\r\n  const type = settingIdsToCollagePictureTypesMap[settingId];\r\n  if (!type) {\r\n    throw new Error(`There is not collage picture type that corresponds specified setting id '${settingId}'`);\r\n  }\r\n  return type;\r\n};\r\n\r\nconst editValueArray = props => {\r\n  const {settingId, settingValue, violationTypeId, requestReadCollage,\r\n    requestUpdateCollageFooterTemplate, updateCollageFooterTemplate} = props;\r\n  const idOfSetting = settingId.split('/')[0];\r\n  switch (idOfSetting) {\r\n    case ids.VehicleDetectionFrameFooterTemplateSettingId:\r\n    case ids.OverviewBeginFooterTemplateSettingId:\r\n    case ids.VehicleDetectionBeginFooterTemplateSettingId:\r\n    case ids.OverviewEndFooterTemplateSettingId:\r\n    case ids.VehicleDetectionEndFooterTemplateSettingId: {\r\n      const collagePictureType = getCollagePictureType(idOfSetting);\r\n      return value => {\r\n        const currentFooterLines = settingValue;\r\n        const newFooterLines = value;\r\n        if (!isEqual(currentFooterLines, newFooterLines)) {\r\n          const newFooterTemplate = {collagePictureType, footerLines: newFooterLines};\r\n          requestUpdateCollageFooterTemplate(baseUrl, violationTypeId, newFooterTemplate)\r\n            .then(() => updateCollageFooterTemplate(newFooterTemplate))\r\n            .then(() => requestReadCollage(baseUrl, violationTypeId));\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst uploadRoadSignFile = props => {\r\n  const {requestUploadCollageRoadSignFile, violationTypeId, updateCollageRoadSign,\r\n    settingId: roadSignSettingId, settingValue: roadSignSettingValue} = props;\r\n  return ({fileName, fileData}) => {\r\n    const fileDataBase64 = base64.fromByteArray(new Uint8Array(fileData));\r\n    requestUploadCollageRoadSignFile(baseUrl, violationTypeId, {fileName, fileDataBase64})\r\n      .then(filePath => updateCollageRoadSign(roadSignSettingId, {...roadSignSettingValue, filePath, stale: true}));\r\n  };\r\n};\r\n\r\nconst CollageSettingValueEditor = props => {\r\n  const {settingEditorTypeId, settingId, className} = props;\r\n  switch (settingEditorTypeId) {\r\n    case ids.SelectorEditorTypeId:\r\n      return (\r\n        <Selector\r\n          items={selectorItems(props)}\r\n          selectItem={selectItem(props)}\r\n          selectedItemId={selectedItemId(props)}\r\n          className={className}\r\n          />\r\n      );\r\n    case ids.TextInputEditorTypeId:\r\n      return <TextInput id={settingId} defaultValue={defaultText(props)} editText={editText(props)}/>;\r\n    case ids.FontEditorTypeId:\r\n      return (\r\n        <FontEditor\r\n          id={settingId}\r\n          label={{fontName: capitalize(localizedStrings.FontName), fontSize: capitalize(localizedStrings.FontSize)}}\r\n          defaultValue={defaultValueObject(props)}\r\n          editValue={editValueObject(props)}\r\n          />\r\n      );\r\n    case ids.FooterTemplateEditorTypeId:\r\n      return (\r\n        <FooterTemplateEditor\r\n          id={settingId}\r\n          label={capitalize(localizedStrings.FooterTemplateLineLabel)}\r\n          footerLines={defaultValueArray(props)}\r\n          editFooterLines={editValueArray(props)}\r\n          />\r\n      );\r\n    case ids.CollageTrafficLightEditorTypeId:\r\n      return (\r\n        <CollageTrafficLightEditor\r\n          trafficLight={defaultValueObject(props)}\r\n          onEdit={editValueObject(props)}\r\n          onApply={applyValueObject(props)}\r\n          />\r\n      );\r\n    case ids.CollageRoadSignEditorTypeId:\r\n      return (\r\n        <RoadSignEditor\r\n          roadSign={defaultValueObject(props)}\r\n          uploadRoadSignFile={uploadRoadSignFile(props)}\r\n          onEdit={editValueObject(props)}\r\n          onApply={applyValueObject(props)}\r\n          />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nCollageSettingValueEditor.propTypes = {\r\n  exportTypeId: PropTypes.string.isRequired,\r\n  settingId: PropTypes.string.isRequired,\r\n  settingValue: PropTypes.any,\r\n  settingEditorTypeId: PropTypes.string.isRequired,\r\n  finishCollageEditing: PropTypes.func.isRequired,\r\n  videoExportModes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string\r\n  })).isRequired,\r\n  selectCollageVideoExportMode: PropTypes.func.isRequired,\r\n  requestUpdateCollageCurrentVideoExportMode: PropTypes.func.isRequired,\r\n  requestReadCollageVideoExportSettings: PropTypes.func.isRequired,\r\n  videoSecondsBeforeCheckTime: PropTypes.number,\r\n  videoSecondsAfterCheckTime: PropTypes.number,\r\n  updateCollageVideoSecondsBeforeCheckTime: PropTypes.func.isRequired,\r\n  updateCollageVideoSecondsAfterCheckTime: PropTypes.func.isRequired,\r\n  updateCollageDefaultFont: PropTypes.func.isRequired,\r\n  requestUpdateCollageDefaultFont: PropTypes.func.isRequired,\r\n  violationTypeId: PropTypes.string.isRequired,\r\n  requestReadCollage: PropTypes.func.isRequired,\r\n  updateCollageFont: PropTypes.func.isRequired,\r\n  requestUpdateCollageFont: PropTypes.func.isRequired,\r\n  requestUpdateCollageFooterTemplate: PropTypes.func.isRequired,\r\n  updateCollageFooterTemplate: PropTypes.func.isRequired,\r\n  requestUpdateCollageTrafficLight: PropTypes.func.isRequired,\r\n  updateCollageTrafficLight: PropTypes.func.isRequired,\r\n  requestUploadCollageRoadSignFile: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n  updateCollageRoadSign: PropTypes.func.isRequired,\r\n  requestUpdateCollageRoadSign: PropTypes.func.isRequired,\r\n  updateCollageExportPath: PropTypes.func.isRequired\r\n};\r\n\r\nCollageSettingValueEditor.defaultProps = {\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const setting = selectors.getCollageSetting(state, ownProps.settingId);\r\n  return {\r\n    exportTypeId: selectors.getSelectedExportTypeId(state),\r\n    settingEditorTypeId: setting.editorTypeId,\r\n    videoExportModes: selectors.getCollageVideoExportModes(state),\r\n    selectedVideoExportModeId: selectors.getSelectedCollageVideoExportModeId(state),\r\n    videoSecondsBeforeCheckTime: selectors.getCollageVideoExportSecondsBeforeCheckTime(state),\r\n    videoSecondsAfterCheckTime: selectors.getCollageVideoExportSecondsAfterCheckTime(state),\r\n    violationTypeId: selectors.getSelectedViolationTypeId(state),\r\n    settingValue: setting.value\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(CollageSettingValueEditor);\r\n"]}