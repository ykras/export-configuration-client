{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAM,iBAAiB,kBAAM,UAAC,OAAD,EAAU,YAAV,EAAwB,KAAxB,EAAkC;AAC7D,UAAQ,EAAC,UAAU,KAAX,EAAkB,UAAU,aAAa,QAAzC,EAAR;AACD,CAFsB,CAAvB;;AAIA,IAAM,iBAAiB,kBAAM,UAAC,OAAD,EAAU,YAAV,EAAwB,KAAxB,EAAkC;AAC7D,UAAQ,EAAC,UAAU,aAAa,QAAxB,EAAkC,UAAU,KAA5C,EAAR;AACD,CAFsB,CAAvB;;AAIA,IAAM,aAAa,SAAb,UAAa;AAAA,MAAE,EAAF,QAAE,EAAF;AAAA,MAAM,KAAN,QAAM,KAAN;AAAA,MAAa,YAAb,QAAa,YAAb;AAAA,MAA2B,SAA3B,QAA2B,SAA3B;AAAA,MAAsC,MAAtC,QAAsC,MAAtC;AAAA,MAA8C,SAA9C,QAA8C,SAA9C;AAAA,SACjB;AAAA;AAAA,MAAK,WAAW,0BAAW,YAAX,EAAyB,SAAzB,CAAhB;AACE;AACE,UAAO,EAAP,cADF;AAEE,aAAO,MAAM,QAFf;AAGE,oBAAc,aAAa,QAH7B;AAIE,gBAAU,eAAe,SAAf,EAA0B,YAA1B,CAJZ;AAKE,cAAQ;AALV,MADF;AAQE;AACE,UAAO,EAAP,cADF;AAEE,aAAO,MAAM,QAFf;AAGE,oBAAc,aAAa,QAH7B;AAIE,gBAAU,eAAe,SAAf,EAA0B,YAA1B,CAJZ;AAKE,cAAQ;AALV;AARF,GADiB;AAAA,CAAnB;;AAmBA,WAAW,SAAX,GAAuB;AACrB,MAAI,iBAAU,MADO;AAErB,SAAO,iBAAU,KAAV,CAAgB;AACrB,cAAU,iBAAU,MADC;AAErB,cAAU,iBAAU;AAFC,GAAhB,EAGJ,UALkB;AAMrB,gBAAc,iBAAU,KAAV,CAAgB;AAC5B,cAAU,iBAAU,MADQ;AAE5B,cAAU,iBAAU;AAFQ,GAAhB,CANO;AAUrB,aAAW,iBAAU,IAVA;AAWrB,UAAQ,iBAAU,IAXG;AAYrB,aAAW,iBAAU;AAZA,CAAvB;;AAeA,WAAW,YAAX,GAA0B;AACxB,MAAI,EADoB;AAExB,gBAAc,EAAC,UAAU,EAAX,EAAe,UAAU,EAAzB,EAFU;AAGxB,aAAW,qBAAM,CAAE,CAHK;AAIxB,UAAQ,KAJgB;AAKxB,aAAW;AALa,CAA1B;;kBAQe,U","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './FontEditor.css';\r\nimport classNames from 'classnames';\r\nimport TextInput from '../TextInput';\r\nimport {curry} from 'ramda';\r\n\r\nconst handleFontName = curry((handler, defaultValue, value) => {\r\n  handler({fontName: value, fontSize: defaultValue.fontSize});\r\n});\r\n\r\nconst handleFontSize = curry((handler, defaultValue, value) => {\r\n  handler({fontName: defaultValue.fontName, fontSize: value});\r\n});\r\n\r\nconst FontEditor = ({id, label, defaultValue, editValue, inline, className}) => (\r\n  <div className={classNames('FontEditor', className)}>\r\n    <TextInput\r\n      id={`${id}-fontName`}\r\n      label={label.fontName}\r\n      defaultValue={defaultValue.fontName}\r\n      editText={handleFontName(editValue, defaultValue)}\r\n      inline={inline}\r\n      />\r\n    <TextInput\r\n      id={`${id}-fontSize`}\r\n      label={label.fontSize}\r\n      defaultValue={defaultValue.fontSize}\r\n      editText={handleFontSize(editValue, defaultValue)}\r\n      inline={inline}\r\n      />\r\n  </div>\r\n);\r\n\r\nFontEditor.propTypes = {\r\n  id: PropTypes.string,\r\n  label: PropTypes.shape({\r\n    fontName: PropTypes.string,\r\n    fontSize: PropTypes.string\r\n  }).isRequired,\r\n  defaultValue: PropTypes.shape({\r\n    fontName: PropTypes.string,\r\n    fontSize: PropTypes.string\r\n  }),\r\n  editValue: PropTypes.func,\r\n  inline: PropTypes.bool,\r\n  className: PropTypes.string\r\n};\r\n\r\nFontEditor.defaultProps = {\r\n  id: '',\r\n  defaultValue: {fontName: '', fontSize: ''},\r\n  editValue: () => {},\r\n  inline: false,\r\n  className: null\r\n};\r\n\r\nexport default FontEditor;\r\n"]}