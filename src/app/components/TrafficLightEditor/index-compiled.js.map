{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './TrafficLightEditor.css';\r\nimport classNames from 'classnames';\r\nimport selectors from '../../store/selectors';\r\nimport {capitalize, toNumber, toString, isNaN} from 'lodash';\r\nimport {curry} from 'ramda';\r\nimport localizedStrings from '../../localization';\r\nimport TextInput from '../TextInput';\r\nimport Button from '../Button';\r\n\r\nconst handleEditingOf = curry((paramName, handler, currentTrafficLight, newParamValue) => {\r\n  const newTrafficLight = {...currentTrafficLight,\r\n    [paramName]: isNaN(toNumber(newParamValue)) ? 0 : toNumber(newParamValue)};\r\n  handler(newTrafficLight);\r\n});\r\n\r\nconst handleRectSelect = (handler, rect) => () => {\r\n  const newTrafficLight = {\r\n    x: rect.x,\r\n    y: rect.y,\r\n    width: rect.w,\r\n    height: rect.h\r\n  };\r\n  handler(newTrafficLight);\r\n};\r\n\r\nconst handleApply = (handler, trafficLight) => () => handler(trafficLight);\r\n\r\nconst TrafficLightEditor = ({style, className, trafficLight, onEdit, onApply, selectedRectangle}) => (\r\n  <div style={style} className={classNames('TrafficLightEditor', className)}>\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-1\">\r\n        X:\r\n      </div>\r\n      <div className=\"col-xs-3\">\r\n        <TextInput\r\n          id=\"srcX\" value={toString(trafficLight.x)}\r\n          onTextChanged={handleEditingOf('x', onEdit, trafficLight)}\r\n          />\r\n      </div>\r\n      <div className=\"col-xs-1 col-xs-offset-1\">\r\n        Y:\r\n      </div>\r\n      <div className=\"col-xs-3\">\r\n        <TextInput\r\n          id=\"srcY\" value={toString(trafficLight.y)}\r\n          onTextChanged={handleEditingOf('y', onEdit, trafficLight)}\r\n          />\r\n      </div>\r\n      <div className=\"col-xs-1 col-xs-offset-1\">\r\n        <Button\r\n          iconPath={require(\"../../images/select_rect.png\")} style={{padding: 0}}\r\n          disabled={selectedRectangle === null}\r\n          onClick={handleRectSelect(onEdit, selectedRectangle)}\r\n          />\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-1\">\r\n        W:\r\n      </div>\r\n      <div className=\"col-xs-3\">\r\n        <TextInput\r\n          id=\"srcW\" value={toString(trafficLight.width)}\r\n          onTextChanged={handleEditingOf('width', onEdit, trafficLight)}\r\n          />\r\n      </div>\r\n      <div className=\"col-xs-1 col-xs-offset-1\">\r\n        H:\r\n      </div>\r\n      <div className=\"col-xs-3\">\r\n        <TextInput\r\n          id=\"srcH\" value={toString(trafficLight.height)}\r\n          onTextChanged={handleEditingOf('height', onEdit, trafficLight)}\r\n          />\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-4 col-xs-offset-7\">\r\n        <Button\r\n          text={capitalize(localizedStrings.Apply)}\r\n          disabled={!trafficLight.stale}\r\n          onClick={handleApply(onApply, trafficLight)}\r\n          />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nTrafficLightEditor.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  trafficLight: PropTypes.shape({\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    stale: PropTypes.bool\r\n  }).isRequired,\r\n  onEdit: PropTypes.func,\r\n  onApply: PropTypes.func,\r\n  selectedRectangle: PropTypes.shape({\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    w: PropTypes.number,\r\n    h: PropTypes.number\r\n  })\r\n};\r\n\r\nTrafficLightEditor.defaultProps = {\r\n  style: null,\r\n  className: null,\r\n  onEdit: () => {},\r\n  onApply: () => {},\r\n  selectedRectangle: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRectangle: selectors.getOverviewPictureSelectedRectangle(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(TrafficLightEditor);\r\n"]}