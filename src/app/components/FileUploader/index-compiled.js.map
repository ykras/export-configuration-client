{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {Component, PropTypes} from 'react';\r\nimport './FileUploader.css';\r\nimport classNames from 'classnames';\r\nimport Button from '../Button';\r\nimport statusTypes from '../../common/statusTypes';\r\n\r\nclass FileUploader extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.fileElem = undefined;\r\n    this.setFileElem = this.setFileElem.bind(this);\r\n    this.handleFileSelection = this.handleFileSelection.bind(this);\r\n    this.handleFileSelectionCancel = this.handleFileSelectionCancel.bind(this);\r\n    this.handleFileUploading = this.handleFileUploading.bind(this);\r\n    this.fileLoaded = this.fileLoaded.bind(this);\r\n    this.state = {file: null};\r\n  }\r\n  render() {\r\n    const {style, className} = this.props;\r\n    const {file} = this.state;\r\n    return (\r\n      <div style={style} className={classNames('FileUploader', className)}>\r\n        {this.selectFileView()}\r\n        {file && this.uploadFileView()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  selectFileView() {\r\n    const {selectButtonText, fileNamePlaceholder, fileUploadStatus} = this.props;\r\n    const {file} = this.state;\r\n    const uploading = fileUploadStatus === statusTypes.Pending;\r\n    return (\r\n      <div>\r\n        <label className=\"btn btn-default btn-file\" htmlFor=\"fileElem\" disabled={uploading}>{selectButtonText}</label>\r\n        <input type=\"file\" id=\"fileElem\" accept=\"image/*\" style={{display: 'none'}} onChange={this.handleFileSelection} disabled={uploading} ref={this.setFileElem}/>\r\n        {file ? <span style={{marginLeft: '5px', color: uploading ? 'gray' : 'black'}}>{file.name}</span> :\r\n          <span style={{color: 'gray', marginLeft: '5px'}}>{fileNamePlaceholder}</span>}\r\n        {file && !uploading &&\r\n          <img style={{marginLeft: '5px'}} src={require(\"../../images/remove.png\")} onClick={this.handleFileSelectionCancel}/>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setFileElem(elem) {\r\n    this.fileElem = elem;\r\n  }\r\n\r\n  sizeOf(file) {\r\n    return file.size > 1024 * 1024 ? `${Math.round(file.size * 100 / (1024 * 1024)) / 100} MB` :\r\n      `${Math.round(file.size * 100 / 1024) / 100} KB`;\r\n  }\r\n\r\n  uploadFileView() {\r\n    const {uploadButtonText, fileNameLabel, fileSizeLabel, fileUploadStatus} = this.props;\r\n    const {file} = this.state;\r\n    const uploading = fileUploadStatus === statusTypes.Pending;\r\n    return (\r\n      <div style={{marginTop: '5px'}}>\r\n        <Button style={{marginBottom: '5px', display: 'inline'}} disabled={uploading} text={uploadButtonText} onClick={this.handleFileUploading}/>\r\n        {uploading && <img style={{marginLeft: '5px', width: '20px', height: '20px'}} src={require(\"../../images/loading.gif\")}/>}\r\n        <div style={{color: 'gray'}}>{fileNameLabel ? `${fileNameLabel}: ${file.name}` : `${file.name}`}</div>\r\n        <div style={{color: 'gray'}}>{fileSizeLabel ? `${fileSizeLabel}: ${this.sizeOf(file)}` : `${this.sizeOf(file)}`}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleFileSelection(e) {\r\n    const file = e.target.files[0];\r\n    if (!file || file.type.split('/')[0] !== 'image') {\r\n      return;\r\n    }\r\n    this.setState({file});\r\n  }\r\n\r\n  handleFileSelectionCancel() {\r\n    this.setState({file: null});\r\n    this.fileElem.value = '';\r\n  }\r\n\r\n  handleFileUploading() {\r\n    const {file} = this.state;\r\n    this.uploadFile(file);\r\n  }\r\n\r\n  uploadFile(file) {\r\n    const reader = new FileReader();\r\n    reader.onload = this.fileLoaded(file);\r\n    reader.onerror = e => {\r\n      console.error(`Failed to read file '${file.name}'. Error code ${e.target.error.code}`);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n  fileLoaded(file) {\r\n    const {uploadFile} = this.props;\r\n    return e => {\r\n      const fileData = e.target.result;\r\n      uploadFile({fileName: file.name, fileType: file.type, fileData});\r\n    };\r\n  }\r\n}\r\n\r\nFileUploader.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  selectButtonText: PropTypes.string,\r\n  fileNamePlaceholder: PropTypes.string,\r\n  uploadButtonText: PropTypes.string,\r\n  fileNameLabel: PropTypes.string,\r\n  fileSizeLabel: PropTypes.string,\r\n  uploadFile: PropTypes.func,\r\n  fileUploadStatus: PropTypes.string\r\n};\r\n\r\nFileUploader.defaultProps = {\r\n  style: null,\r\n  className: null,\r\n  selectButtonText: '',\r\n  fileNamePlaceholder: '',\r\n  uploadButtonText: '',\r\n  fileNameLabel: '',\r\n  fileSizeLabel: '',\r\n  uploadFile: () => {},\r\n  fileUploadStatus: ''\r\n};\r\n\r\nexport default FileUploader;\r\n"]}