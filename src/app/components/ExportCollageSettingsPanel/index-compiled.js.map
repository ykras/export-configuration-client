{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {Component, PropTypes} from 'react';\r\nimport './ExportCollageSettingsPanel.css';\r\nimport ViolationTypeSelector from '../ViolationTypeSelector';\r\nimport Selector from '../Selector';\r\nimport DropdownMenuButton from '../DropdownMenuButton';\r\nimport Button from '../Button';\r\nimport CollageEditor from '../CollageEditor';\r\nimport CollageSettingsTable from '../CollageSettingsTable';\r\nimport selectors from '../../store/selectors';\r\nimport actionCreators from '../../store/actions';\r\nimport {baseUrl} from '../../api';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport localizedStrings, {localizeItems} from '../../localization';\r\nimport {capitalize, includes, startsWith, isEmpty} from 'lodash';\r\nimport {combineRequests} from '../../common/utils';\r\nimport statusTypes from '../../common/statusTypes';\r\nimport requestTypes from '../../common/requestTypes';\r\nimport violationTypes from '../../common/violationTypes';\r\nimport foregroundObjects from '../../common/foregroundCollageObjectTypes';\r\nimport {curry, find, propEq, compose} from 'ramda';\r\nimport CollageSizeLabel from '../CollageSizeLabel';\r\nimport ids, {collageTrafficLightSettingIdPrefix, collageRoadSignSettingIdPrefix}\r\n  from '../../store/identifiers';\r\nimport CollageSelectedRectangleLabel from '../CollageSelectedRectangleLabel';\r\nimport withDataRequest from '../../higher_order_components/withDataFetch/withDataRequest';\r\nimport withLoadingIndicator from '../../higher_order_components/withLoadingIndicator';\r\n\r\nclass ExportCollageSettingsPanel extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.onForegroundObjectAdded = this.onForegroundObjectAdded.bind(this);\r\n    this.addTrafficLight = this.addTrafficLight.bind(this);\r\n    this.handleForegroundObjectsRemoving = this.handleForegroundObjectsRemoving.bind(this);\r\n    this.handleSaveConfiguration = this.handleSaveConfiguration.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      selectedViolationType: curViolType,\r\n      selectedCollageSettingTypeId: selectedSettingTypeId,\r\n      selectCollageSettingType: selectSettingType\r\n    } = this.props;\r\n    const {selectedViolationType: nextViolType} = nextProps;\r\n    if (curViolType && nextViolType && curViolType.id !== nextViolType.id) {\r\n      const settingTypes = this.filterCollageSettingTypes(nextViolType.id);\r\n      if (!find(propEq('id', selectedSettingTypeId))(settingTypes)) {\r\n        selectSettingType(settingTypes[0].id);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {className, readCollageRequest, violationTypes, selectViolationType, selectedViolationType} = this.props;\r\n    return (\r\n      <div className={classNames('ExportCollageSettingsPanel', className)}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4\">\r\n              <ViolationTypeSelector violationTypes={violationTypes} selectViolationType={selectViolationType} selectedViolationTypeId={selectedViolationType.id} inline/>\r\n            </div>\r\n            <div className=\"col-xs-6 col-sm-2 col-sm-offset-1 col-md-offset-3 col-md-1\">\r\n              {this.foregroundObjectAdditionComponent()}\r\n            </div>\r\n            <div className=\"col-xs-6 col-sm-2 col-md-1\">\r\n              {this.foregroundObjectRemovalComponent()}\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n              {this.settingTypeSelector()}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4\">\r\n              {readCollageRequest.status === statusTypes.Success && <CollageSizeLabel/>}\r\n            </div>\r\n            <div className=\"col-sm-5 text-right\">\r\n              {readCollageRequest.status === statusTypes.Success && <CollageSelectedRectangleLabel/>}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-9\">\r\n              <CollageEditor/>\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n              <CollageSettingsTable/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-offset-11 col-sm-1\">\r\n              {this.saveConfigurationButton()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  saveConfigurationButton() {\r\n    const requests = [this.props.saveCurrentCollageConfigurationRequest,\r\n      this.props.updateCollageCurrentVideoExportModeRequest,\r\n      this.props.updateCollageVideoExportSettingsRequest,\r\n      this.props.updateCollageExportPathRequest];\r\n    const saveRequest = combineRequests(...requests);\r\n    const savingStatus = requests.every(r => !isEmpty(r)) ? saveRequest.status : null;\r\n    const savingInProgress = savingStatus === statusTypes.Pending;\r\n    return (\r\n      <div className=\"row\">\r\n        <div style={{paddingRight: 0}} className=\"col-xs-9, vertical-center\">\r\n          <Button\r\n            disabled={savingInProgress}\r\n            id=\"apply-button\"\r\n            text={localizedStrings.Apply}\r\n            className=\"margin-top-10px pull-right\"\r\n            onClick={this.handleSaveConfiguration}\r\n            />\r\n        </div>\r\n        {savingInProgress && <div className=\"col-xs-2 vertical-center\">\r\n          <img style={{width: '20px', marginTop: '7px'}} src={require(\"../../images/loading.gif\")}/>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleSaveConfiguration() {\r\n    this.props.requestSaveCurrentCollageConfiguration(baseUrl);\r\n    this.props.requestUpdateCollageCurrentVideoExportMode(baseUrl, this.props.exportTypeId, this.props.selectedVideoExportModeId);\r\n    const videoExportSettings = {videoSecondsBeforeCheckTime: this.props.videoSecondsBeforeCheckTime,\r\n      videoSecondsAfterCheckTime: this.props.videoSecondsAfterCheckTime};\r\n    this.props.requestUpdateCollageVideoExportSettings(baseUrl, this.props.exportTypeId, videoExportSettings);\r\n    this.props.requestUpdateCollageExportPath(baseUrl, this.props.collageExportPath);\r\n  }\r\n\r\n  onForegroundObjectAdded(objectTypeId) {\r\n    const {foregroundObjectTypes} = this.props;\r\n    const foregroundObjectType = find(propEq('id', objectTypeId))(foregroundObjectTypes);\r\n    if (!foregroundObjectType) {\r\n      throw new Error(`Cannot find foreground collage objects type by identifier '${objectTypeId}'`);\r\n    }\r\n    switch (foregroundObjectType.name) {\r\n      case foregroundObjects.TrafficLight:\r\n        this.addTrafficLight();\r\n        break;\r\n      case foregroundObjects.Sign:\r\n        this.addRoadSign();\r\n        break;\r\n      default:\r\n        throw new Error(`Unknown foreground collage objects type '${foregroundObjectType.name}'`);\r\n    }\r\n  }\r\n\r\n  addTrafficLight() {\r\n    const {requestCreateCollageTrafficLight, selectedViolationType,\r\n      selectedCollageSettingTypeId, selectCollageSettingType} = this.props;\r\n    requestCreateCollageTrafficLight(baseUrl, selectedViolationType.id)\r\n      .then(() => {\r\n        if (selectedCollageSettingTypeId !== ids.CollageTrafficLightsSettingTypeId) {\r\n          selectCollageSettingType(ids.CollageTrafficLightsSettingTypeId);\r\n        }\r\n      });\r\n  }\r\n\r\n  addRoadSign() {\r\n    const {requestCreateCollageRoadSign, selectedViolationType,\r\n    selectedCollageSettingTypeId, selectCollageSettingType} = this.props;\r\n    requestCreateCollageRoadSign(baseUrl, selectedViolationType.id)\r\n      .then(() => {\r\n        if (selectedCollageSettingTypeId !== ids.CollageRoadSignsSettingTypeId) {\r\n          selectCollageSettingType(ids.CollageRoadSignsSettingTypeId);\r\n        }\r\n      });\r\n  }\r\n\r\n  foregroundObjectAdditionComponent() {\r\n    const {foregroundObjectTypes, selectedViolationType} = this.props;\r\n    const enabledBy = curry((violationTypeName, foregroundObjectType) => {\r\n      switch (violationTypeName) {\r\n        case violationTypes.StopLine:\r\n        case violationTypes.RedLight:\r\n          return foregroundObjectType.name === foregroundObjects.TrafficLight;\r\n        case violationTypes.WrongLineTurn:\r\n          return foregroundObjectType.name === foregroundObjects.Sign;\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n    const enabledForegroundObjectTypes =\r\n      foregroundObjectTypes.filter(enabledBy(selectedViolationType.name));\r\n    return (\r\n      <DropdownMenuButton\r\n        id=\"add-object-menu\"\r\n        items={localizeItems(enabledForegroundObjectTypes, capitalize)}\r\n        selectItem={this.onForegroundObjectAdded}\r\n        text={capitalize(localizedStrings.AddForegroundCollageObject)}\r\n        iconPath={require(\"../../images/add.png\")}\r\n        disabled={enabledForegroundObjectTypes.length < 1}\r\n        />\r\n    );\r\n  }\r\n\r\n  requestDeleteForegroundCollageObject(settingId) {\r\n    const [foregroundObjectSettingId, , foregroundObjectId] = settingId.split('/');\r\n    if (foregroundObjectSettingId === ids.CollageTrafficLightSettingId) {\r\n      return this.deleteCollageTrafficLight(foregroundObjectId);\r\n    }\r\n    if (foregroundObjectSettingId === ids.CollageRoadSignSettingId) {\r\n      return this.deleteCollageRoadSign(foregroundObjectId);\r\n    }\r\n    Promise.reject(new Error(`Unknown foreground collage object (settingId: ${settingId})`));\r\n  }\r\n\r\n  deleteCollageTrafficLight(trafficLightId) {\r\n    const {requestDeleteCollageTrafficLight} = this.props;\r\n    return requestDeleteCollageTrafficLight(baseUrl, trafficLightId);\r\n  }\r\n\r\n  deleteCollageRoadSign(roadSignId) {\r\n    const {requestDeleteCollageRoadSign} = this.props;\r\n    return requestDeleteCollageRoadSign(baseUrl, roadSignId);\r\n  }\r\n\r\n  handleForegroundObjectsRemoving() {\r\n    const {\r\n      collageSettings, deleteCollageSetting,\r\n      selectedCollageSettingTypeId, collageSettingTypes,\r\n      selectCollageSettingType, selectedViolationType: {id: violationTypeId},\r\n      requestReadCollage\r\n    } = this.props;\r\n    const foregroundObjectsSettings = collageSettings\r\n      .filter(s => startsWith(s.id, collageTrafficLightSettingIdPrefix(violationTypeId)) ||\r\n                   startsWith(s.id, collageRoadSignSettingIdPrefix(violationTypeId)));\r\n    Promise.all(foregroundObjectsSettings\r\n      .filter(s => s.typeId === selectedCollageSettingTypeId)\r\n      .filter(s => s.isSelected)\r\n      .map(s => this.requestDeleteForegroundCollageObject(s.id)\r\n        .then(() => deleteCollageSetting(s.id))\r\n      ))\r\n      .then(() => {\r\n        if (!foregroundObjectsSettings\r\n            .filter(s => s.typeId === selectedCollageSettingTypeId)\r\n            .filter(s => !s.isSelected)\r\n            .some(s => s.typeId === selectedCollageSettingTypeId)) {\r\n          selectCollageSettingType(collageSettingTypes[0].id);\r\n        }\r\n      })\r\n      .then(() => requestReadCollage(baseUrl, violationTypeId));\r\n  }\r\n\r\n  foregroundObjectRemovalComponent() {\r\n    const {\r\n      collageSettings: settings,\r\n      selectedCollageSettingTypeId: settingTypeId,\r\n      selectedViolationType: {id: violationTypeId}\r\n    } = this.props;\r\n    const noForegroundObjectsToRemove = !((settingTypeId === ids.CollageTrafficLightsSettingTypeId ||\r\n      settingTypeId === ids.CollageRoadSignsSettingTypeId) && settings\r\n        .filter(s => startsWith(s.id, collageTrafficLightSettingIdPrefix(violationTypeId)) ||\r\n                  startsWith(s.id, collageRoadSignSettingIdPrefix(violationTypeId)))\r\n        .some(s => s.isSelected));\r\n    return (\r\n      <Button\r\n        id=\"remove-object-button\"\r\n        text={capitalize(localizedStrings.RemoveForegroundCollageObject)}\r\n        iconPath={require(\"../../images/remove.png\")}\r\n        disabled={noForegroundObjectsToRemove}\r\n        onClick={this.handleForegroundObjectsRemoving}\r\n        />\r\n    );\r\n  }\r\n\r\n  filterCollageSettingTypes(violationTypeId) {\r\n    const {collageSettingTypes, collageSettings} = this.props;\r\n    const settingTypes = collageSettingTypes.filter(type =>\r\n      collageSettings.some(setting => setting.typeId === type.id &&\r\n      (!includes(setting.id, '/') || includes(setting.id, violationTypeId))));\r\n    return settingTypes;\r\n  }\r\n\r\n  settingTypeSelector() {\r\n    const {selectCollageSettingType, selectedViolationType,\r\n      selectedCollageSettingTypeId} = this.props;\r\n    const settingTypes = this.filterCollageSettingTypes(selectedViolationType.id);\r\n    return (\r\n      <Selector\r\n        id=\"settings-selector\"\r\n        items={localizeItems(settingTypes, capitalize)}\r\n        selectedItemId={selectedCollageSettingTypeId}\r\n        selectItem={selectCollageSettingType}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nExportCollageSettingsPanel.propTypes = {\r\n  violationTypes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  selectViolationType: PropTypes.func.isRequired,\r\n  selectedViolationType: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  }),\r\n  requestReadForegroundCollageObjectTypes: PropTypes.func.isRequired,\r\n  readForegroundObjectTypesRequest: PropTypes.object.isRequired,\r\n  foregroundObjectTypes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  requestReadCollageSettingTypes: PropTypes.func.isRequired,\r\n  readCollageSettingTypesRequest: PropTypes.object.isRequired,\r\n  collageSettingTypes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  selectedCollageSettingTypeId: PropTypes.string,\r\n  collageSettings: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  collageExportPath: PropTypes.string.isRequired,\r\n  selectCollageSettingType: PropTypes.func.isRequired,\r\n  requestReadCollageVideoExportModes: PropTypes.func.isRequired,\r\n  readCollageVideoExportModesRequest: PropTypes.object.isRequired,\r\n  requestReadCollageCurrentVideoExportMode: PropTypes.func.isRequired,\r\n  readCollageCurrentVideoExportModeRequest: PropTypes.object.isRequired,\r\n  exportTypeId: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  requestCreateCollageTrafficLight: PropTypes.func.isRequired,\r\n  deleteCollageSetting: PropTypes.func.isRequired,\r\n  requestDeleteCollageTrafficLight: PropTypes.func.isRequired,\r\n  requestReadCollage: PropTypes.func.isRequired,\r\n  readCollageRequest: PropTypes.object.isRequired,\r\n  requestCreateCollageRoadSign: PropTypes.func.isRequired,\r\n  requestDeleteCollageRoadSign: PropTypes.func.isRequired,\r\n  requestSaveCurrentCollageConfiguration: PropTypes.func.isRequired,\r\n  saveCurrentCollageConfigurationRequest: PropTypes.object,\r\n  requestReadCollagePictureTypes: PropTypes.func.isRequired,\r\n  readCollagePictureTypesRequest: PropTypes.object.isRequired,\r\n  requestUpdateCollageVideoExportSettings: PropTypes.func.isRequired,\r\n  updateCollageVideoExportSettingsRequest: PropTypes.object.isRequired,\r\n  videoSecondsBeforeCheckTime: PropTypes.number,\r\n  videoSecondsAfterCheckTime: PropTypes.number,\r\n  requestUpdateCollageCurrentVideoExportMode: PropTypes.func.isRequired,\r\n  updateCollageCurrentVideoExportModeRequest: PropTypes.object.isRequired,\r\n  selectedVideoExportModeId: PropTypes.string.isRequired,\r\n  requestUpdateCollageExportPath: PropTypes.func.isRequired,\r\n  updateCollageExportPathRequest: PropTypes.object.isRequired\r\n};\r\n\r\nExportCollageSettingsPanel.defaultProps = {\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  violationTypes: selectors.getViolationTypes(state),\r\n  selectedViolationType: selectors.getSelectedViolationType(state),\r\n  readForegroundObjectTypesRequest: selectors.getRequest(state, requestTypes.ReadForegroundCollageObjectTypes),\r\n  foregroundObjectTypes: selectors.getForegroundCollageObjectTypes(state),\r\n  readCollageSettingTypesRequest: selectors.getRequest(state, requestTypes.ReadCollageSettingTypes),\r\n  collageSettingTypes: selectors.getCollageSettingTypes(state),\r\n  selectedCollageSettingTypeId: selectors.getSelectedCollageSettingTypeId(state),\r\n  collageSettings: selectors.getCollageSettings(state),\r\n  collageExportPath: selectors.getCollageExportPath(state),\r\n  readCollageVideoExportModesRequest: selectors.getRequest(state, requestTypes.ReadCollageVideoExportModes),\r\n  readCollageCurrentVideoExportModeRequest: selectors.getRequest(state, requestTypes.ReadCollageCurrentVideoExportMode),\r\n  exportTypeId: selectors.getSelectedExportTypeId(state),\r\n  readCollageRequest: selectors.getRequest(state, requestTypes.readCollage(selectors.getSelectedViolationTypeId(state))),\r\n  saveCurrentCollageConfigurationRequest: selectors.getRequest(state, requestTypes.SaveCurrentCollageConfiguration),\r\n  readCollagePictureTypesRequest: selectors.getRequest(state, requestTypes.ReadCollagePictureTypes),\r\n  updateCollageVideoExportSettingsRequest: selectors.getRequest(state, requestTypes.UpdateCollageVideoExportSettings),\r\n  videoSecondsBeforeCheckTime: selectors.getCollageVideoExportSecondsBeforeCheckTime(state),\r\n  videoSecondsAfterCheckTime: selectors.getCollageVideoExportSecondsAfterCheckTime(state),\r\n  updateCollageCurrentVideoExportModeRequest: selectors.getRequest(state, requestTypes.UpdateCollageCurrentVideoExportMode),\r\n  selectedVideoExportModeId: selectors.getSelectedCollageVideoExportModeId(state),\r\n  updateCollageExportPathRequest: selectors.getRequest(state, requestTypes.UpdateCollageExportPath)\r\n});\r\n\r\nconst selectDataRequest = p => ([\r\n  {send: p.requestReadForegroundCollageObjectTypes},\r\n  {send: p.requestReadCollageSettingTypes},\r\n  [{send: p.requestReadCollageVideoExportModes, params: p.exportTypeId},\r\n    {send: p.requestReadCollageCurrentVideoExportMode, params: p.exportTypeId}],\r\n  {send: p.requestReadCollagePictureTypes}\r\n]);\r\n\r\nconst selectLoadingRequest = p => combineRequests(p.readForegroundObjectTypesRequest,\r\n    p.readCollageSettingTypesRequest, p.readCollageVideoExportModesRequest,\r\n    p.readCollageCurrentVideoExportModeRequest, p.readCollagePictureTypesRequest);\r\n\r\nconst Panel = compose(\r\n  withDataRequest(selectDataRequest),\r\n  withLoadingIndicator(selectLoadingRequest, null)\r\n)(ExportCollageSettingsPanel);\r\n\r\nexport default connect(mapStateToProps, actionCreators)(Panel);\r\n"]}