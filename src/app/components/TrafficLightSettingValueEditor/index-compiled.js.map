{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAM,eAAe,SAAf,YAAe,QAAS;AAAA,MACrB,EADqB,GACR,KADQ,CACrB,EADqB;AAAA,MACjB,KADiB,GACR,KADQ,CACjB,KADiB;;AAE5B,UAAQ,GAAG,KAAH,CAAS,GAAT,EAAc,CAAd,CAAR;AACE,SAAK,sBAAI,qBAAT;AACE,aAAO,SAAS,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAa,OAAO,CAApB,EAAuB,QAAQ,CAA/B,EAAhB;AACF;AACE,aAAO,EAAP;AAJJ;AAMD,CARD;;AAUA,IAAM,0BAA0B,SAA1B,uBAA0B,QAAS;AAAA,MAChC,EADgC,GACC,KADD,CAChC,EADgC;AAAA,MAC5B,KAD4B,GACC,KADD,CAC5B,KAD4B;AAAA,MACrB,kBADqB,GACC,KADD,CACrB,kBADqB;;AAEvC,UAAQ,GAAG,KAAH,CAAS,GAAT,EAAc,CAAd,CAAR;AACE,SAAK,sBAAI,qBAAT;AACE,aAAO,oBAAY;AACjB,YAAM,kBAAkB,KAAxB;AACA,YAAM,kBAAkB,QAAxB;AACA,YAAI,CAAC,qBAAQ,eAAR,EAAyB,eAAzB,CAAL,EAAgD;AAC9C,6BAAmB,EAAnB,eAA2B,eAA3B,IAA4C,OAAO,IAAnD;AACD;AACF,OAND;AAOF;AACE,aAAO,YAAM,CAAE,CAAf;AAVJ;AAYD,CAdD;;AAgBA,IAAM,2BAA2B,SAA3B,wBAA2B,QAAS;AAAA,MACjC,EADiC,GAC0C,KAD1C,CACjC,EADiC;AAAA,MAC7B,oBAD6B,GAC0C,KAD1C,CAC7B,oBAD6B;AAAA,MACP,yBADO,GAC0C,KAD1C,CACP,yBADO;AAAA,MACoB,kBADpB,GAC0C,KAD1C,CACoB,kBADpB;;AAExC,UAAQ,GAAG,KAAH,CAAS,GAAT,EAAc,CAAd,CAAR;AACE,SAAK,sBAAI,qBAAT;AACE,aAAO,2BAAmB;AACxB,gDAAmC,oBAAnC,EAAyD,eAAzD,EACG,IADH,CACQ;AAAA,iBAAM,mBAAmB,EAAnB,eAA2B,eAA3B,IAA4C,OAAO,KAAnD,IAAN;AAAA,SADR;AAED,OAHD;AAIF;AACE,aAAO,YAAM,CAAE,CAAf;AAPJ;AASD,CAXD;;AAaA,IAAM,iCAAiC,SAAjC,8BAAiC,QAAS;AAAA,MACvC,YADuC,GACvB,KADuB,CACvC,YADuC;;AAE9C,UAAQ,YAAR;AACE,SAAK,sBAAI,wBAAT;AACE,aACE,yEACM,KADN;AAEE,sBAAc,aAAa,KAAb,CAFhB;AAGE,gBAAQ,wBAAwB,KAAxB,CAHV;AAIE,iBAAS,yBAAyB,KAAzB;AAJX,SADF;AAQF;AACE,aAAO,IAAP;AAXJ;AAaD,CAfD;;AAiBA,+BAA+B,SAA/B,GAA2C;AACzC,SAAO,iBAAU,MADwB;AAEzC,aAAW,iBAAU,MAFoB;AAGzC,gBAAc,iBAAU,MAAV,CAAiB,UAHU;AAIzC,SAAO,iBAAU,GAJwB;AAKzC,sBAAoB,iBAAU,IAAV,CAAe,UALM;AAMzC,6BAA2B,iBAAU,IAAV,CAAe,UAND;AAOzC,wBAAsB,iBAAU,MAAV,CAAiB;AAPE,CAA3C;;AAUA,+BAA+B,YAA/B,GAA8C;AAC5C,SAAO,IADqC;AAE5C,aAAW;AAFiC,CAA9C;;kBAKe,8B","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './TrafficLightSettingValueEditor.css';\r\nimport ids from '../../store/identifiers';\r\nimport TrafficLightEditor from '../TrafficLightEditor';\r\nimport {isEqual} from 'lodash';\r\nimport {baseUrl} from '../../api';\r\n\r\nconst settingValue = props => {\r\n  const {id, value} = props;\r\n  switch (id.split('/')[0]) {\r\n    case ids.TrafficLightSettingId:\r\n      return value || {x: 0, y: 0, width: 0, height: 0};\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nconst settingValueEditHandler = props => {\r\n  const {id, value, updateTrafficLight} = props;\r\n  switch (id.split('/')[0]) {\r\n    case ids.TrafficLightSettingId:\r\n      return newValue => {\r\n        const curTrafficLight = value;\r\n        const newTrafficLight = newValue;\r\n        if (!isEqual(newTrafficLight, curTrafficLight)) {\r\n          updateTrafficLight(id, {...newTrafficLight, stale: true});\r\n        }\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst settingValueApplyHandler = props => {\r\n  const {id, recognitionChannelId, requestUpdateTrafficLight, updateTrafficLight} = props;\r\n  switch (id.split('/')[0]) {\r\n    case ids.TrafficLightSettingId:\r\n      return newTrafficLight => {\r\n        requestUpdateTrafficLight(baseUrl, recognitionChannelId, newTrafficLight)\r\n          .then(() => updateTrafficLight(id, {...newTrafficLight, stale: false}));\r\n      };\r\n    default:\r\n      return () => {};\r\n  }\r\n};\r\n\r\nconst TrafficLightSettingValueEditor = props => {\r\n  const {editorTypeId} = props;\r\n  switch (editorTypeId) {\r\n    case ids.TrafficLightEditorTypeId:\r\n      return (\r\n        <TrafficLightEditor\r\n          {...props}\r\n          trafficLight={settingValue(props)}\r\n          onEdit={settingValueEditHandler(props)}\r\n          onApply={settingValueApplyHandler(props)}\r\n          />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nTrafficLightSettingValueEditor.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  editorTypeId: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  updateTrafficLight: PropTypes.func.isRequired,\r\n  requestUpdateTrafficLight: PropTypes.func.isRequired,\r\n  recognitionChannelId: PropTypes.string.isRequired\r\n};\r\n\r\nTrafficLightSettingValueEditor.defaultProps = {\r\n  style: null,\r\n  className: null\r\n};\r\n\r\nexport default TrafficLightSettingValueEditor;\r\n"]}