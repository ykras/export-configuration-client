{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;;;;;;;;;IAEM,Y;;;AACJ,0BAAqB;AAAA;;AAAA;;AAAA,sCAAN,IAAM;AAAN,UAAM;AAAA;;AAAA,uJACV,IADU;;AAEnB,UAAK,KAAL,GAAa;AACX,eAAS,MAAK,KAAL,CAAW;AADT,KAAb;AAGA,UAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AACA,UAAK,mBAAL,GAA2B,MAAK,mBAAL,CAAyB,IAAzB,OAA3B;AANmB;AAOpB;;;;kCAEa;AAAA,UACL,KADK,GACW,IADX,CACL,KADK;AAAA,UACE,KADF,GACW,IADX,CACE,KADF;;AAEZ,UAAM,UAAU,CAAC,MAAM,OAAvB;AACA,WAAK,QAAL,CAAc,EAAC,gBAAD,EAAd;AACA,YAAM,OAAN,CAAc,OAAd;AACD;;;0CAEqB;AAAA,UACb,OADa,GACF,KAAK,KADH,CACb,OADa;AAAA,mBAEgB,KAAK,KAFrB;AAAA,UAEb,SAFa,UAEb,SAFa;AAAA,UAEF,QAFE,UAEF,QAFE;AAAA,UAEQ,IAFR,UAEQ,IAFR;;AAGpB,UAAM,gBAAgB,EAAtB;AACA,UAAI,WAAW,SAAf,EAA0B;AACxB,YAAM,iBAAiB,0BAAW,WAAX,iBAAqC,SAArC,CAAvB;AACA,sBAAc,IAAd,CAAmB,wCAAM,WAAW,cAAjB,EAAiC,KAAI,GAArC,GAAnB;AACA,sBAAc,IAAd,CAAmB,GAAnB;AACD;AACD,UAAI,QAAJ,EAAc;AACZ,sBAAc,IAAd,CAAmB,uCAAK,KAAK,QAAV,EAAoB,KAAI,GAAxB,GAAnB;AACA,sBAAc,IAAd,CAAmB,GAAnB;AACD;AACD,oBAAc,IAAd,CAAmB,IAAnB;AACA,aAAO,aAAP;AACD;;;6BAEQ;AAAA,UACA,OADA,GACW,KAAK,KADhB,CACA,OADA;AAAA,UAEA,KAFA,GAES,KAAK,KAFd,CAEA,KAFA;;AAGP,UAAM,cAAc,0BAAW,KAAX,EAAkB,aAAlB,EAAiC,EAAC,QAAQ,OAAT,EAAjC,CAApB;AACA,aACE;AAAA;AAAA,UAAK,WAAU,cAAf;AACE;AAAA;AAAA;AACE,kBAAK,QADP;AAEE,uBAAW,WAFb;AAGE,2BAAY,QAHd;AAIE,4BAAc,OAJhB;AAKE,qBAAS,KAAK,WALhB;AAME,mBAAO;AANT;AAQG,eAAK,mBAAL;AARH;AADF,OADF;AAcD;;;;;;AAGH,aAAa,SAAb,GAAyB;AACvB,oBAAkB,iBAAU,IADL;AAEvB,aAAW,iBAAU,MAFE;AAGvB,YAAU,iBAAU,MAHG;AAIvB,QAAM,iBAAU,MAJO;AAKvB,WAAS,iBAAU,IALI;AAMvB,SAAO,iBAAU;AANM,CAAzB;;AASA,aAAa,YAAb,GAA4B;AAC1B,oBAAkB,KADQ;AAE1B,aAAW,IAFe;AAG1B,YAAU,IAHgB;AAI1B,QAAM,EAJoB;AAK1B,WAAS,mBAAM,CAAE,CALS;AAM1B,SAAO;AANmB,CAA5B;;kBASe,Y","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {Component, PropTypes} from 'react';\r\nimport './ToggleButton.css';\r\nimport classNames from 'classnames';\r\n\r\nclass ToggleButton extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.state = {\r\n      checked: this.props.initiallyChecked\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.createButtonContent = this.createButtonContent.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const {state, props} = this;\r\n    const checked = !state.checked;\r\n    this.setState({checked});\r\n    props.onClick(checked);\r\n  }\r\n\r\n  createButtonContent() {\r\n    const {checked} = this.state;\r\n    const {glyphicon, iconPath, text} = this.props;\r\n    const buttonContent = [];\r\n    if (checked && glyphicon) {\r\n      const glyphiconClass = classNames('glyphicon', `glyphicon-${glyphicon}`);\r\n      buttonContent.push(<span className={glyphiconClass} key=\"1\"></span>);\r\n      buttonContent.push(' ');\r\n    }\r\n    if (iconPath) {\r\n      buttonContent.push(<img src={iconPath} key=\"2\"/>);\r\n      buttonContent.push(' ');\r\n    }\r\n    buttonContent.push(text);\r\n    return buttonContent;\r\n  }\r\n\r\n  render() {\r\n    const {checked} = this.state;\r\n    const {style} = this.props;\r\n    const buttonClass = classNames('btn', 'btn-default', {active: checked});\r\n    return (\r\n      <div className=\"ToggleButton\">\r\n        <button\r\n          type=\"button\"\r\n          className={buttonClass}\r\n          data-toggle=\"button\"\r\n          aria-pressed={checked}\r\n          onClick={this.handleClick}\r\n          style={style}\r\n          >\r\n          {this.createButtonContent()}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToggleButton.propTypes = {\r\n  initiallyChecked: PropTypes.bool,\r\n  glyphicon: PropTypes.string,\r\n  iconPath: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nToggleButton.defaultProps = {\r\n  initiallyChecked: false,\r\n  glyphicon: null,\r\n  iconPath: null,\r\n  text: '',\r\n  onClick: () => {},\r\n  style: null\r\n};\r\n\r\nexport default ToggleButton;\r\n"]}