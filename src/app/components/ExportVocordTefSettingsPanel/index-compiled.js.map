{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './ExportVocordTefSettingsPanel.css';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport TextInput from '../TextInput/index';\r\nimport ExportPathFormatLabel from '../ExportPathFormatLabel';\r\nimport Selector from '../Selector/index';\r\nimport UserCredentialsInput from '../UserCredentialsInput/index';\r\nimport Checkbox from '../Checkbox';\r\nimport localizedStrings, {localizeItems} from '../../localization';\r\nimport {capitalize, isNaN, toNumber, toString} from 'lodash';\r\nimport {curry, compose} from 'ramda';\r\nimport selectors from '../../store/selectors';\r\nimport actionCreators from '../../store/actions';\r\nimport requestTypes from '../../common/requestTypes';\r\nimport withDataRequest from '../../higher_order_components/withDataFetch/withDataRequest';\r\nimport withLoadingIndicator from '../../higher_order_components/withLoadingIndicator';\r\nimport {combineRequests} from '../../common/utils';\r\nimport videoExportModeNames from '../../common/videoExportModes';\r\nimport {baseUrl} from '../../api';\r\nimport Button from '../Button';\r\n\r\nconst handleSwitching = curry((handler, enabled) => handler(enabled));\r\nconst handleSelection = curry((handler, selectedItemId) => handler(selectedItemId));\r\nconst handleNumericParamEdit = curry((paramName, handler, currentSettings, newParamValue) => {\r\n  const newSettings = {...currentSettings,\r\n    [paramName]: isNaN(toNumber(newParamValue)) ? 0 : toNumber(newParamValue)};\r\n  handler(newSettings);\r\n});\r\nconst handleTextParamEdit = curry((paramName, handler, currentSettings, newParamValue) => {\r\n  const newSettings = {...currentSettings,\r\n    [paramName]: toString(newParamValue)};\r\n  handler(newSettings);\r\n});\r\n\r\nconst saveConfiguration = (exportTypeId, settings, requestUpdateSettings,\r\n  selectedVideoExportMode, requestUpdateVideoExportMode,\r\n  videoExportSettings, requestUpdateVideoExportSettings) => () => {\r\n    requestUpdateSettings(baseUrl, settings);\r\n    requestUpdateVideoExportMode(baseUrl, exportTypeId, selectedVideoExportMode.id);\r\n    requestUpdateVideoExportSettings(baseUrl, exportTypeId, videoExportSettings);\r\n  };\r\n\r\nconst ExportVocordTefSettingsPanel = ({style, className, exportTypeId,\r\n  settings, updateSettings, requestUpdateSettings,\r\n  videoExportModes, selectVideoExportMode, selectedVideoExportMode, requestUpdateVideoExportMode,\r\n  videoExportSettings, updateVideoExportSettings, requestUpdateVideoExportSettings,\r\n  toggleSpreadOutViolations}) => (\r\n  <div style={style} className={classNames('ExportVocordTefSettingsPanel', className)}>\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 vertical-bottom\">\r\n          <TextInput\r\n            id=\"export-path-input\"\r\n            label={capitalize(localizedStrings.ExportPathLabel)}\r\n            value={settings.exportBasePath}\r\n            onTextChanged={handleTextParamEdit('exportBasePath', updateSettings, settings)}\r\n            />\r\n        </div>\r\n        <div className=\"col-md-4 vertical-bottom form-group\">\r\n          <ExportPathFormatLabel/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <Selector\r\n            id=\"export-video-selector\"\r\n            label={capitalize(localizedStrings.ExportVocordTefVideoLabel)}\r\n            items={localizeItems(videoExportModes, capitalize)}\r\n            selectedItemId={selectedVideoExportMode.id}\r\n            selectItem={handleSelection(selectVideoExportMode)}\r\n            />\r\n        </div>\r\n      </div>\r\n      {selectedVideoExportMode.name !== videoExportModeNames.DoNotExport &&\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextInput\r\n              id=\"video-seconds-before-check-time\"\r\n              label={capitalize(localizedStrings.VocordTefVideoSecondsBeforeCheckTime)}\r\n              value={toString(videoExportSettings.videoSecondsBeforeCheckTime)}\r\n              onTextChanged={handleNumericParamEdit('videoSecondsBeforeCheckTime', updateVideoExportSettings, videoExportSettings)}\r\n              />\r\n          </div>\r\n        </div>}\r\n      {selectedVideoExportMode.name !== videoExportModeNames.DoNotExport &&\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextInput\r\n              id=\"video-seconds-after-check-time\"\r\n              label={capitalize(localizedStrings.VocordTefVideoSecondsAfterCheckTime)}\r\n              value={toString(videoExportSettings.videoSecondsAfterCheckTime)}\r\n              onTextChanged={handleNumericParamEdit('videoSecondsAfterCheckTime', updateVideoExportSettings, videoExportSettings)}\r\n              />\r\n          </div>\r\n        </div>}\r\n      {selectedVideoExportMode.name === videoExportModeNames.ExportSeparatelyFromVehicleData &&\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextInput\r\n              id=\"video-export-path\"\r\n              label={capitalize(localizedStrings.VideoExportPathLabel)}\r\n              value={videoExportSettings.videoExportPath}\r\n              onTextChanged={handleTextParamEdit('videoExportPath', updateVideoExportSettings, videoExportSettings)}\r\n              />\r\n          </div>\r\n        </div>}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <UserCredentialsInput\r\n            login={settings.login}\r\n            onLoginChanged={handleTextParamEdit('login', updateSettings, settings)}\r\n            password={settings.password}\r\n            onPasswordChanged={handleTextParamEdit('password', updateSettings, settings)}\r\n            />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <Checkbox\r\n            id=\"spread-violations-switch\"\r\n            label={capitalize(localizedStrings.SpreadOutViolationsLabel)}\r\n            onChanged={handleSwitching(toggleSpreadOutViolations)}\r\n            checked={settings.usePathTemplate}\r\n            />\r\n        </div>\r\n      </div>\r\n      {settings.usePathTemplate &&\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextInput\r\n              id=\"export-folders-template\"\r\n              label={capitalize(localizedStrings.ExportFoldersFormatLabel)}\r\n              value={settings.exportRelativePathTemplate}\r\n              onTextChanged={handleTextParamEdit('exportRelativePathTemplate', updateSettings, settings)}\r\n              />\r\n          </div>\r\n        </div>}\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-4 col-xs-offset-6 col-sm-2 col-sm-offset-10 col-md-1 col-md-offset-11\">\r\n          <Button\r\n            id=\"apply-button\"\r\n            text={localizedStrings.Apply}\r\n            onClick={saveConfiguration(exportTypeId, settings, requestUpdateSettings,\r\n              selectedVideoExportMode, requestUpdateVideoExportMode,\r\n              videoExportSettings, requestUpdateVideoExportSettings)}\r\n            />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nExportVocordTefSettingsPanel.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  settings: PropTypes.shape({\r\n    exportBasePath: PropTypes.string.isRequired,\r\n    exportRelativePathTemplate: PropTypes.string,\r\n    usePathTemplate: PropTypes.bool,\r\n    login: PropTypes.string,\r\n    password: PropTypes.string\r\n  }).isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  exportTypeId: PropTypes.string.isRequired,\r\n  requestReadSettings: PropTypes.func.isRequired,\r\n  readSettingsRequest: PropTypes.object.isRequired,\r\n  requestUpdateSettings: PropTypes.func.isRequired,\r\n  requestReadVideoExportModes: PropTypes.func.isRequired,\r\n  readVideoExportModesRequest: PropTypes.object.isRequired,\r\n  requestReadCurrentVideoExportMode: PropTypes.func.isRequired,\r\n  readCurrentVideoExportModeRequest: PropTypes.object.isRequired,\r\n  requestReadVideoExportSettings: PropTypes.func.isRequired,\r\n  readVideoExportSettingsRequest: PropTypes.object.isRequired,\r\n  requestUpdateVideoExportSettings: PropTypes.func.isRequired,\r\n  videoExportModes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string\r\n  })).isRequired,\r\n  selectedVideoExportMode: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  selectVideoExportMode: PropTypes.func.isRequired,\r\n  requestUpdateVideoExportMode: PropTypes.func.isRequired,\r\n  videoExportSettings: PropTypes.shape({\r\n    videoSecondsBeforeCheckTime: PropTypes.number,\r\n    videoSecondsAfterCheckTime: PropTypes.number\r\n  }).isRequired,\r\n  updateVideoExportSettings: PropTypes.func.isRequired,\r\n  toggleSpreadOutViolations: PropTypes.func.isRequired\r\n};\r\n\r\nExportVocordTefSettingsPanel.defaultProps = {\r\n  style: null,\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: selectors.getVocordTefSettings(state),\r\n  exportTypeId: selectors.getSelectedExportTypeId(state),\r\n  readSettingsRequest: selectors.getRequest(state, requestTypes.ReadVocordTefSettings),\r\n  readVideoExportModesRequest:\r\n    selectors.getRequest(state, requestTypes.ReadVocordTefVideoExportModes),\r\n  readCurrentVideoExportModeRequest:\r\n    selectors.getRequest(state, requestTypes.ReadVocordTefCurrentVideoExportMode),\r\n  readVideoExportSettingsRequest:\r\n    selectors.getRequest(state, requestTypes.ReadVocordTefVideoExportSettings),\r\n  videoExportModes: selectors.getVocordTefVideoExportModes(state),\r\n  selectedVideoExportMode: selectors.getSelectedVocordTefVideoExportMode(state),\r\n  videoExportSettings: selectors.getVocordTefVideoExportSettings(state)\r\n});\r\n\r\nconst mapActionCreatorsToProps = {\r\n  requestReadSettings: actionCreators.requestReadVocordTefSettings,\r\n  updateSettings: actionCreators.updateVocordTefSettings,\r\n  requestUpdateSettings: actionCreators.requestUpdateVocordTefSettings,\r\n  requestReadVideoExportModes: actionCreators.requestReadVocordTefVideoExportModes,\r\n  requestReadCurrentVideoExportMode: actionCreators.requestReadVocordTefCurrentVideoExportMode,\r\n  selectVideoExportMode: actionCreators.selectVocordTefVideoExportMode,\r\n  requestUpdateVideoExportMode: actionCreators.requestUpdateVocordTefCurrentVideoExportMode,\r\n  updateVideoExportSettings: actionCreators.updateVocordTefVideoExportSettings,\r\n  requestReadVideoExportSettings: actionCreators.requestReadVocordTefVideoExportSettings,\r\n  requestUpdateVideoExportSettings: actionCreators.requestUpdateVocordTefVideoExportSettings,\r\n  toggleSpreadOutViolations: actionCreators.toggleSpreadOutViolations\r\n};\r\n\r\nconst selectDataRequest = p => ([\r\n  {send: p.requestReadSettings},\r\n  [{send: p.requestReadVideoExportModes, params: p.exportTypeId},\r\n  {send: p.requestReadCurrentVideoExportMode, params: p.exportTypeId}],\r\n  {send: p.requestReadVideoExportSettings, params: p.exportTypeId}\r\n]);\r\n\r\nconst selectLoadingRequest = p => combineRequests(\r\n  p.readSettingsRequest,\r\n  p.readVideoExportModesRequest,\r\n  p.readCurrentVideoExportModeRequest,\r\n  p.readVideoExportSettingsRequest\r\n);\r\n\r\nconst Panel = compose(\r\n  withDataRequest(selectDataRequest),\r\n  withLoadingIndicator(selectLoadingRequest, null)\r\n)(ExportVocordTefSettingsPanel);\r\n\r\nexport default connect(mapStateToProps, mapActionCreatorsToProps)(Panel);\r\n"]}