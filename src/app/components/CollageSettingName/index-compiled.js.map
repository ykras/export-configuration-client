{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAM,4BAA4B,kBAAM,UAAC,OAAD,EAAU,SAAV,EAAqB,eAArB,EAAyC;AAC/E,UAAQ,SAAR,EAAmB,eAAnB;AACD,CAFiC,CAAlC;;AAIA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,SAAD,EAAY,WAAZ,EAAyB,iBAAzB,EAA4C,6BAA5C,EAA8E;AACpG,MAAI,wBAAW,SAAX,EAAsB,sBAAI,4BAA1B,KAA2D,wBAAW,SAAX,EAAsB,sBAAI,wBAA1B,CAA/D,EAAoH;AAClH,WACE;AACE,kBAAU,gCAAa,WAAb,qBADZ;AAEE,iBAAW,0BAA0B,6BAA1B,EAAyD,SAAzD,CAFb;AAGE,eAAS;AAHX,MADF;AAOD;AACD,SAAO;AAAA;AAAA;AAAI,oCAAa,WAAb;AAAJ,GAAP;AACD,CAXD;;AAaA,IAAM,qBAAqB,SAArB,kBAAqB;AAAA,MAAE,SAAF,QAAE,SAAF;AAAA,MAAa,SAAb,QAAa,SAAb;AAAA,MAAwB,WAAxB,QAAwB,WAAxB;AAAA,MAAqC,iBAArC,QAAqC,iBAArC;AAAA,MAAwD,6BAAxD,QAAwD,6BAAxD;AAAA,SACzB;AAAA;AAAA,MAAK,WAAW,0BAAW,oBAAX,EAAiC,SAAjC,CAAhB;AACG,oBAAgB,SAAhB,EAA2B,WAA3B,EAAwC,iBAAxC,EAA2D,6BAA3D;AADH,GADyB;AAAA,CAA3B;;AAMA,mBAAmB,SAAnB,GAA+B;AAC7B,aAAW,iBAAU,MAAV,CAAiB,UADC;AAE7B,eAAa,iBAAU,SAAV,CAAoB,CAC/B,iBAAU,MADqB,EAE/B,iBAAU,MAFqB,CAApB,EAGV,UAL0B;AAM7B,qBAAmB,iBAAU,IANA;AAO7B,aAAW,iBAAU,MAPQ;AAQ7B,iCAA+B,iBAAU,IAAV,CAAe;AARjB,CAA/B;;AAWA,mBAAmB,YAAnB,GAAkC;AAChC,aAAW,IADqB;AAEhC,qBAAmB;AAFa,CAAlC;;AAKA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD,EAAQ,QAAR,EAAqB;AAC3C,MAAM,UAAU,oBAAU,iBAAV,CAA4B,KAA5B,EAAmC,SAAS,SAA5C,CAAhB;AACA,SAAO;AACL,iBAAa,QAAQ,IADhB;AAEL,uBAAmB,QAAQ;AAFtB,GAAP;AAID,CAND;;kBAQe,yBAAQ,eAAR,qBAAyC,kBAAzC,C","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './CollageSettingName.css';\r\nimport classNames from 'classnames';\r\nimport selectors from '../../store/selectors';\r\nimport actionCreators from '../../store/actions';\r\nimport {localizeText} from '../../localization';\r\nimport {capitalize, startsWith} from 'lodash';\r\nimport ids from '../../store/identifiers';\r\nimport Checkbox from '../Checkbox';\r\nimport {curry} from 'ramda';\r\n\r\nconst onSettingSelectionChanged = curry((handler, settingId, settingSelected) => {\r\n  handler(settingId, settingSelected);\r\n});\r\n\r\nconst settingNameView = (settingId, settingName, isSettingSelected, updateCollageSettingSelection) => {\r\n  if (startsWith(settingId, ids.CollageTrafficLightSettingId) || startsWith(settingId, ids.CollageRoadSignSettingId)) {\r\n    return (\r\n      <Checkbox\r\n        label={`${localizeText(settingName, capitalize)}`}\r\n        onChanged={onSettingSelectionChanged(updateCollageSettingSelection, settingId)}\r\n        checked={isSettingSelected}\r\n        />\r\n    );\r\n  }\r\n  return <p>{localizeText(settingName, capitalize)}</p>;\r\n};\r\n\r\nconst CollageSettingName = ({className, settingId, settingName, isSettingSelected, updateCollageSettingSelection}) => (\r\n  <div className={classNames('CollageSettingName', className)}>\r\n    {settingNameView(settingId, settingName, isSettingSelected, updateCollageSettingSelection)}\r\n  </div>\r\n);\r\n\r\nCollageSettingName.propTypes = {\r\n  settingId: PropTypes.string.isRequired,\r\n  settingName: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]).isRequired,\r\n  isSettingSelected: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  updateCollageSettingSelection: PropTypes.func.isRequired\r\n};\r\n\r\nCollageSettingName.defaultProps = {\r\n  className: null,\r\n  isSettingSelected: false\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const setting = selectors.getCollageSetting(state, ownProps.settingId);\r\n  return {\r\n    settingName: setting.name,\r\n    isSettingSelected: setting.isSelected\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreators)(CollageSettingName);\r\n"]}