{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './ExportPotokPlusSettingsPanel.css';\r\nimport {connect} from 'react-redux';\r\nimport TextInput from '../TextInput/index';\r\nimport ExportPathFormatLabel from '../ExportPathFormatLabel';\r\nimport UserCredentialsInput from '../UserCredentialsInput/index';\r\nimport classNames from 'classnames';\r\nimport localizedStrings from '../../localization';\r\nimport {capitalize, toString} from 'lodash';\r\nimport {curry, compose} from 'ramda';\r\nimport selectors from '../../store/selectors';\r\nimport actionCreators from '../../store/actions';\r\nimport requestTypes from '../../common/requestTypes';\r\nimport withDataRequest from '../../higher_order_components/withDataFetch/withDataRequest';\r\nimport withLoadingIndicator from '../../higher_order_components/withLoadingIndicator';\r\nimport Button from '../Button';\r\nimport {baseUrl} from '../../api';\r\n\r\nconst handleParamEdit = curry((paramName, handler, currentSettings, newParamValue) => {\r\n  const newSettings = {...currentSettings,\r\n    [paramName]: toString(newParamValue)};\r\n  handler(newSettings);\r\n});\r\n\r\nconst saveConfiguration = (settings, requestUpdateSettings) => () => {\r\n  requestUpdateSettings(baseUrl, settings);\r\n};\r\n\r\nconst exportPathInputRow = p => {\r\n  const {settings: {exportPath}, settings, updateSettings} = p;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 vertical-bottom\">\r\n        <TextInput\r\n          id=\"export-potok-plus-path-input\"\r\n          label={capitalize(localizedStrings.ExportPathLabel)}\r\n          value={exportPath}\r\n          onTextChanged={handleParamEdit('exportPath', updateSettings, settings)}\r\n          />\r\n      </div>\r\n      <div className=\"col-md-4 vertical-bottom form-group\">\r\n        <ExportPathFormatLabel/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst userCredentialsInputRow = p => {\r\n  const {settings: {login, password}, settings, updateSettings} = p;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-2\">\r\n        <UserCredentialsInput\r\n          login={login}\r\n          onLoginChanged={handleParamEdit('login', updateSettings, settings)}\r\n          password={password}\r\n          onPasswordChanged={handleParamEdit('password', updateSettings, settings)}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst saveConfigurationButtonRow = p => {\r\n  const {settings, requestUpdateSettings} = p;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-4 col-xs-offset-6 col-sm-2 col-sm-offset-10 col-md-1 col-md-offset-11\">\r\n        <Button\r\n          id=\"apply-button\"\r\n          text={localizedStrings.Apply}\r\n          onClick={saveConfiguration(settings, requestUpdateSettings)}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ExportPotokPlusSettingsPanel = props => {\r\n  const {style, className} = props;\r\n  return (\r\n    <div style={style} className={classNames('ExportPotokPlusSettingsPanel', className)}>\r\n      <div className=\"container-fluid\">\r\n        {exportPathInputRow(props)}\r\n        {userCredentialsInputRow(props)}\r\n        {saveConfigurationButtonRow(props)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nExportPotokPlusSettingsPanel.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  settings: PropTypes.shape({\r\n    exportPath: PropTypes.string,\r\n    login: PropTypes.string,\r\n    password: PropTypes.string\r\n  }).isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  requestReadSettings: PropTypes.func.isRequired,\r\n  readSettingsRequest: PropTypes.object.isRequired,\r\n  requestUpdateSettings: PropTypes.func.isRequired\r\n};\r\n\r\nExportPotokPlusSettingsPanel.defaultProps = {\r\n  style: null,\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: selectors.getPotokPlusSettings(state),\r\n  readSettingsRequest: selectors.getRequest(state, requestTypes.ReadPotokPlusSettings)\r\n});\r\n\r\nconst mapActionCreatorsToProps = {\r\n  updateSettings: actionCreators.updatePotokPlusSettings,\r\n  requestReadSettings: actionCreators.requestReadPotokPlusSettings,\r\n  requestUpdateSettings: actionCreators.requestUpdatePotokPlusSettings\r\n};\r\n\r\nconst selectDataRequest = p => ({send: p.requestReadSettings});\r\nconst selectLoadingRequest = p => p.readSettingsRequest;\r\n\r\nconst Panel = compose(\r\n  withDataRequest(selectDataRequest),\r\n  withLoadingIndicator(selectLoadingRequest, null)\r\n)(ExportPotokPlusSettingsPanel);\r\n\r\nexport default connect(mapStateToProps, mapActionCreatorsToProps)(Panel);\r\n"]}