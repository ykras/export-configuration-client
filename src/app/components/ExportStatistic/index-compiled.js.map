{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes, Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './ExportStatistic.css';\r\nimport classNames from 'classnames';\r\nimport localizedStrings, {localizeText} from '../../localization';\r\nimport {capitalize, isEmpty} from 'lodash';\r\nimport actionCreators from '../../store/actions';\r\nimport selectors from '../../store/selectors';\r\nimport {baseUrl} from '../../api';\r\n\r\nconst errorCode = error => `${capitalize(localizedStrings.ErrorCode)}: ${error}`;\r\n\r\nconst errorInfo = (code, category) => (\r\n  <li className=\"list-group-item error-info\">\r\n    <h4 className=\"list-group-item-heading\">{capitalize(localizedStrings.Error)}</h4>\r\n    <p className=\"list-group-item-text\">{localizeText(category, capitalize)}</p>\r\n    <p className=\"list-group-item-text\">{errorCode(code)}</p>\r\n  </li>\r\n);\r\n\r\nconst completedExportTiming = (endTime, violTime) => (\r\n  <li className=\"list-group-item\">\r\n    <span>{`${capitalize(localizedStrings.LastSuccessfulExportTry)} `}</span>\r\n    <span className=\"date-time\">{`${endTime}`}</span>\r\n    <span>{`, ${localizedStrings.ViolationTime} `}</span>\r\n    <span className=\"date-time\">{`${violTime}`}</span>\r\n  </li>\r\n);\r\n\r\nconst incompleteExportTiming = startTime => (\r\n  <li className=\"list-group-item\">\r\n    <span>{`${capitalize(localizedStrings.LastExportTry)} `}</span>\r\n    <span className=\"date-time\">{`${startTime}`}</span>\r\n  </li>\r\n);\r\n\r\nclass ExportStatistic extends Component {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.requestExportStatistic = this.requestExportStatistic.bind(this);\r\n    this.timer = undefined;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.timer = setInterval(this.requestExportStatistic, 3000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    const {className, statistic, succeeded, errorCode, errorCategory, lastSuccessfulExportTryEndTime,\r\n      lastExportedViolationTime, lastExportTryStartTime} = this.props;\r\n    if (isEmpty(statistic)) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className={classNames('ExportStatistic', className)}>\r\n        <div className={classNames('panel', `panel-${succeeded ? 'success' : 'danger'}`)}>\r\n          <div className=\"panel-body\">\r\n            <ul className=\"list-group borderless\">\r\n              {!succeeded && errorInfo(errorCode, errorCategory)}\r\n              {lastSuccessfulExportTryEndTime && lastExportedViolationTime &&\r\n              completedExportTiming(lastSuccessfulExportTryEndTime, lastExportedViolationTime)}\r\n              {lastExportTryStartTime && incompleteExportTiming(lastExportTryStartTime)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  requestExportStatistic() {\r\n    this.props.requestReadExportStatistic(baseUrl);\r\n  }\r\n}\r\n\r\nExportStatistic.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  statistic: PropTypes.object,\r\n  succeeded: PropTypes.bool,\r\n  errorCode: PropTypes.number,\r\n  errorCategory: PropTypes.string,\r\n  lastExportTryStartTime: PropTypes.string,\r\n  lastSuccessfulExportTryEndTime: PropTypes.string,\r\n  lastExportedViolationTime: PropTypes.string,\r\n  requestReadExportStatistic: PropTypes.func.isRequired\r\n};\r\n\r\nExportStatistic.defaultProps = {\r\n  style: null,\r\n  className: null,\r\n  succeeded: true\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  statistic: selectors.getExportStatistic(state),\r\n  succeeded: selectors.getExportSucceeded(state),\r\n  errorCode: selectors.getExportErrorCode(state),\r\n  errorCategory: selectors.getExportErrorCategory(state),\r\n  lastExportTryStartTime: selectors.getLastExportTryStartTime(state),\r\n  lastSuccessfulExportTryEndTime: selectors.getLastSuccessfulExportTryEndTime(state),\r\n  lastExportedViolationTime: selectors.getLastExportedViolationTime(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, actionCreators)(ExportStatistic);\r\n"]}