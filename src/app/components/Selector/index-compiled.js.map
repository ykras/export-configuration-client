{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA,IAAM,SAAS,kBAAM,UAAC,OAAD,EAAU,KAAV,EAAoB;AACvC,UAAQ,MAAM,MAAN,CAAa,KAArB;AACA,QAAM,cAAN;AACD,CAHc,CAAf;;AAKA,IAAM,eAAe,SAAf,YAAe;AAAA,SAAS,yBAAY,KAAZ,KAAsB,oBAAO,KAAP,CAA/B;AAAA,CAArB;;AAEA,IAAM,WAAW,SAAX,QAAW;AAAA,MAAE,KAAF,QAAE,KAAF;AAAA,MAAS,WAAT,QAAS,WAAT;AAAA,MAAsB,KAAtB,QAAsB,KAAtB;AAAA,MAA6B,cAA7B,QAA6B,cAA7B;AAAA,MAA6C,UAA7C,QAA6C,UAA7C;AAAA,MAAyD,MAAzD,QAAyD,MAAzD;AAAA,MAAiE,SAAjE,QAAiE,SAAjE;AAAA,SACf;AAAA;AAAA,MAAK,WAAW,0BAAW,UAAX,EAAuB,SAAvB,CAAhB;AACE;AAAA;AAAA,QAAK,WAAW,0BAAW,EAAC,eAAe,MAAhB,EAAX,CAAhB;AACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACG,gBAAQ;AAAA;AAAA,YAAO,SAAQ,KAAf;AAAsB;AAAtB,SAAR,GAA+C,IADlD;AAEE;AAAA;AAAA,qBAAQ,WAAU,cAAlB,EAAiC,IAAG,KAApC,EAA0C,UAAU,OAAO,UAAP,CAApD,IAA6E,aAAa,cAAb,IAA+B,EAAC,OAAO,EAAR,EAA/B,GAA6C,EAAC,OAAO,cAAR,EAA1H;AACG,yBAAe,aAAa,cAAb,CAAf,GAA8C;AAAA;AAAA,cAAQ,OAAM,EAAd,EAAiB,cAAjB,CAAyB,8BAAzB;AAAyD;AAAzD,WAA9C,GAA+H,IADlI;AAEG,gBAAM,GAAN,CAAU;AAAA,mBAAQ;AAAA;AAAA,gBAAQ,KAAK,KAAK,EAAlB,EAAsB,OAAO,KAAK,EAAlC;AAAuC,mBAAK;AAA5C,aAAR;AAAA,WAAV;AAFH;AAFF;AADF;AADF,GADe;AAAA,CAAjB;;AAcA,SAAS,SAAT,GAAqB;AACnB,SAAO,iBAAU,MADE;AAEnB,eAAa,iBAAU,MAFJ;AAGnB,SAAO,iBAAU,OAAV,CAAkB,iBAAU,KAAV,CAAgB;AACvC,QAAI,iBAAU,MAAV,CAAiB,UADkB;AAEvC,UAAM,iBAAU,MAAV,CAAiB;AAFgB,GAAhB,CAAlB,EAGH,UANe;AAOnB,kBAAgB,iBAAU,MAPP;AAQnB,cAAY,iBAAU,IARH;AASnB,UAAQ,iBAAU,IATC;AAUnB,aAAW,iBAAU;AAVF,CAArB;;AAaA,SAAS,YAAT,GAAwB;AACtB,SAAO,EADe;AAEtB,eAAa,IAFS;AAGtB,kBAAgB,SAHM;AAItB,cAAY,sBAAM,CAAE,CAJE;AAKtB,UAAQ,KALc;AAMtB,aAAW;AANW,CAAxB;;kBASe,Q","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './Selector.css';\r\nimport classNames from 'classnames';\r\nimport {curry} from 'ramda';\r\nimport {isNull, isUndefined} from 'lodash';\r\n\r\nconst handle = curry((handler, event) => {\r\n  handler(event.target.value);\r\n  event.preventDefault();\r\n});\r\n\r\nconst isNotDefined = value => isUndefined(value) || isNull(value);\r\n\r\nconst Selector = ({label, placeholder, items, selectedItemId, selectItem, inline, className}) => (\r\n  <div className={classNames('Selector', className)}>\r\n    <div className={classNames({'form-inline': inline})}>\r\n      <div className=\"form-group\">\r\n        {label ? <label htmlFor=\"sel\">{label}</label> : null}\r\n        <select className=\"form-control\" id=\"sel\" onChange={handle(selectItem)} {...(isNotDefined(selectedItemId) ? {value: \"\"} : {value: selectedItemId})}>\r\n          {placeholder && isNotDefined(selectedItemId) ? <option value=\"\" disabled/* style={{display: 'none'}}*/>{placeholder}</option> : null}\r\n          {items.map(item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nSelector.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  selectedItemId: PropTypes.string,\r\n  selectItem: PropTypes.func,\r\n  inline: PropTypes.bool,\r\n  className: PropTypes.string\r\n};\r\n\r\nSelector.defaultProps = {\r\n  label: '',\r\n  placeholder: null,\r\n  selectedItemId: undefined,\r\n  selectItem: () => {},\r\n  inline: false,\r\n  className: null\r\n};\r\n\r\nexport default Selector;\r\n"]}