{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './CollageSettingsTable.css';\r\nimport classNames from 'classnames';\r\nimport localizedStrings from '../../localization';\r\nimport {capitalize, includes} from 'lodash';\r\nimport actionCreators from '../../store/actions';\r\nimport selectors from '../../store/selectors';\r\nimport CollageSettingsTableRow from '../CollageSettingsTableRow';\r\nimport videoExportModes from '../../common/videoExportModes';\r\nimport ids from '../../store/identifiers';\r\nimport withDataRequest from '../../higher_order_components/withDataFetch/withDataRequest';\r\nimport withDataRefresh from '../../higher_order_components/withDataFetch/withDataRefresh';\r\nimport {curry, compose, prop} from 'ramda';\r\nimport SettingsTable from '../SettingsTable';\r\n\r\nconst selectInitialRequests = props => ([\r\n  {\r\n    send: props.requestReadCollageVideoExportSettings,\r\n    params: props.exportTypeId\r\n  },\r\n  {send: props.requestReadCollageDefaultFont},\r\n  {send: props.requestReadCollageDefaultFontPriority},\r\n  {send: props.requestReadCollageExportPath},\r\n  {\r\n    send: props.requestReadCollageFont,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageFooterTemplates,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageTrafficLights,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageRoadSigns,\r\n    params: props.violationTypeId\r\n  }\r\n]);\r\n\r\nconst selectRefreshRequests = props => ([\r\n  {\r\n    send: props.requestReadCollageFont,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageFooterTemplates,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageTrafficLights,\r\n    params: props.violationTypeId\r\n  },\r\n  {\r\n    send: props.requestReadCollageRoadSigns,\r\n    params: props.violationTypeId\r\n  }\r\n]);\r\n\r\nconst Table = compose(\r\n  withDataRefresh(prop('violationTypeId'), selectRefreshRequests),\r\n  withDataRequest(selectInitialRequests)\r\n)(SettingsTable);\r\n\r\nconst settingsOfSelectedType = curry(({selectedSettingType}, s) => s.typeId === selectedSettingType.id);\r\n\r\nconst settingsForSelectedViolationType = curry(({violationTypeId}, s) =>\r\n  s.id.indexOf('/') < 0 || includes(s.id, violationTypeId));\r\n\r\nconst videoExportSettings = curry(({videoExportMode}, s) =>\r\n  videoExportMode !== videoExportModes.DoNotExport ||\r\n  (s.id !== ids.VideoSecondsBeforeCheckTimeSettingId &&\r\n  s.id !== ids.VideoSecondsAfterCheckTimeSettingId));\r\n\r\nconst filteredSettings = p => p.settings\r\n        .filter(settingsOfSelectedType(p))\r\n        .filter(settingsForSelectedViolationType(p))\r\n        .filter(videoExportSettings(p));\r\n\r\nconst createTableRow = s => <CollageSettingsTableRow key={s.id} settingId={s.id}/>;\r\n\r\nconst CollageSettingsTable = props => {\r\n  const {style, className} = props;\r\n  return (\r\n    <div style={style} className={classNames('CollageSettingsTable', className, 'picture-height')}>\r\n      <Table\r\n        {...props}\r\n        settings={filteredSettings(props)}\r\n        nameHeaderText={capitalize(localizedStrings.SettingNameHeaderText)}\r\n        valueHeaderText={capitalize(localizedStrings.SettingValueHeaderText)}\r\n        createTableRowComponent={createTableRow}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nCollageSettingsTable.propTypes = {\r\n  settings: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    value: PropTypes.any,\r\n    typeId: PropTypes.string,\r\n    editorTypeId: PropTypes.string,\r\n    isEditing: PropTypes.bool\r\n  })).isRequired,\r\n  selectedSettingType: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string\r\n  }).isRequired,\r\n  videoExportMode: PropTypes.string.isRequired,\r\n  violationTypeId: PropTypes.string.isRequired,\r\n  requestReadCollageVideoExportSettings: PropTypes.func.isRequired,\r\n  exportTypeId: PropTypes.string.isRequired,\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  requestReadCollageExportPath: PropTypes.func.isRequired,\r\n  requestReadCollageDefaultFont: PropTypes.func.isRequired,\r\n  requestReadCollageDefaultFontPriority: PropTypes.func.isRequired,\r\n  requestReadCollageFont: PropTypes.func.isRequired,\r\n  requestReadCollageFooterTemplates: PropTypes.func.isRequired,\r\n  requestReadCollageTrafficLights: PropTypes.func.isRequired,\r\n  requestReadCollageRoadSigns: PropTypes.func.isRequired\r\n};\r\n\r\nCollageSettingsTable.defaultProps = {\r\n  style: null,\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: selectors.getCollageSettings(state),\r\n  selectedSettingType: selectors.getSelectedCollageSettingType(state),\r\n  videoExportMode: selectors.getSelectedCollageVideoExportMode(state).name,\r\n  violationTypeId: selectors.getSelectedViolationTypeId(state),\r\n  exportTypeId: selectors.getSelectedExportTypeId(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, actionCreators)(CollageSettingsTable);\r\n"]}