{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,SAAD,EAAY,uBAAZ,EAAqC,YAArC,EACC,kBADD,EACqB,eADrB,EACyC;AAClE,MAAM,QAAQ,0BAA0B,kBAA1B,GAA+C,YAA7D;AACA,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,wBAAW,uBAAiB,0BAA5B,CAAP;AACD;AACD,MAAM,KAAK,UAAU,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAX;AACA,UAAQ,EAAR;AACE,SAAK,sBAAI,2BAAT;AACE,aAAU,MAAM,IAAhB,UAAyB,MAAM,YAA/B;AACF,SAAK,sBAAI,6BAAT;AAAwC;AACtC,YAAM,MAAM,0BAA0B,KAA1B,GAAkC,MAAM,eAAN,CAA9C;AACA,YAAI,CAAC,GAAL,EAAU;AACR,iBAAO,wBAAW,uBAAiB,0BAA5B,CAAP;AACD;AACD,eAAU,IAAI,IAAd,UAAuB,IAAI,YAA3B;AACD;AACD,SAAK,sBAAI,4CAAT;AACA,SAAK,sBAAI,oCAAT;AACA,SAAK,sBAAI,4CAAT;AACA,SAAK,sBAAI,kCAAT;AACA,SAAK,sBAAI,0CAAT;AACE,aAAO,MAAM,GAAN,CAAU,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU;AAAA;AAAA,YAAG,KAAK,CAAR;AAAY;AAAZ,SAAV;AAAA,OAAV,CAAP;AACF,SAAK,sBAAI,4BAAT;AACE,aAAO,qEAA2B,cAAc,KAAzC,GAAP;AACF,SAAK,sBAAI,wBAAT;AACE,aAAO,0DAAgB,UAAU,KAA1B,GAAP;AACF,SAAK,sBAAI,0BAAT;AACE,aAAO,KAAP;AACF;AACE,aAAO,gCAAa,KAAb,qBAAP;AAvBJ;AAyBD,CAhCD;;AAkCA,IAAM,4BAA4B,SAA5B,yBAA4B;AAAA,MAAE,SAAF,QAAE,SAAF;AAAA,MAAa,SAAb,QAAa,SAAb;AAAA,MAAwB,uBAAxB,QAAwB,uBAAxB;AAAA,MAChC,YADgC,QAChC,YADgC;AAAA,MAClB,kBADkB,QAClB,kBADkB;AAAA,MACE,eADF,QACE,eADF;AAAA,SAEhC;AAAA;AAAA,MAAK,WAAW,0BAAW,2BAAX,EAAwC,SAAxC,CAAhB;AACG,uBAAmB,SAAnB,EAA8B,uBAA9B,EAAuD,YAAvD,EAAqE,kBAArE,EAAyF,eAAzF;AADH,GAFgC;AAAA,CAAlC;;AAOA,0BAA0B,SAA1B,GAAsC;AACpC,aAAW,iBAAU,MADe;AAEpC,aAAW,iBAAU,MAAV,CAAiB,UAFQ;AAGpC,gBAAc,iBAAU,GAHY;AAIpC,sBAAoB,iBAAU,GAJM;AAKpC,2BAAyB,iBAAU,IALC;AAMpC,mBAAiB,iBAAU,MAAV,CAAiB;AANE,CAAtC;;AASA,0BAA0B,YAA1B,GAAyC;AACvC,aAAW;AAD4B,CAAzC;;AAIA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD,EAAQ,QAAR,EAAqB;AAC3C,MAAM,UAAU,oBAAU,iBAAV,CAA4B,KAA5B,EAAmC,SAAS,SAA5C,CAAhB;AACA,MAAM,gBAAgB,oBAAU,iBAAV,CAA4B,KAA5B,EAAmC,QAAQ,QAA3C,CAAtB;AACA,MAAM,qBAAqB,gBAAgB,cAAc,KAA9B,GAAsC,IAAjE;AACA,SAAO;AACL,kBAAc,QAAQ,KADjB;AAEL,6BAAyB,QAAQ,gBAF5B;AAGL,qBAAiB,oBAAU,0BAAV,CAAqC,KAArC,CAHZ;AAIL;AAJK,GAAP;AAMD,CAVD;;kBAYe,yBAAQ,eAAR,EAAyB,yBAAzB,C","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './CollageSettingValueViewer.css';\r\nimport classNames from 'classnames';\r\nimport selectors from '../../store/selectors';\r\nimport ids from '../../store/identifiers';\r\nimport {capitalize} from 'lodash';\r\nimport localizedStrings, {localizeText} from '../../localization';\r\nimport CollageTrafficLightViewer from '../CollageTrafficLightViewer';\r\nimport RoadSignViewer from '../RoadSignViewer';\r\n\r\nconst viewOfSettingValue = (settingId, isSettingValueInherited, settingValue,\r\n                            parentSettingValue, violationTypeId) => {\r\n  const value = isSettingValueInherited ? parentSettingValue : settingValue;\r\n  if (!value) {\r\n    return capitalize(localizedStrings.SettingValueIsNotSpecified);\r\n  }\r\n  const id = settingId.split('/')[0];\r\n  switch (id) {\r\n    case ids.CollageDefaultFontSettingId:\r\n      return `${value.name}, ${value.sizeInPoints}`;\r\n    case ids.CollageViolationFontSettingId: {\r\n      const val = isSettingValueInherited ? value : value[violationTypeId];\r\n      if (!val) {\r\n        return capitalize(localizedStrings.SettingValueIsNotSpecified);\r\n      }\r\n      return `${val.name}, ${val.sizeInPoints}`;\r\n    }\r\n    case ids.VehicleDetectionFrameFooterTemplateSettingId:\r\n    case ids.OverviewBeginFooterTemplateSettingId:\r\n    case ids.VehicleDetectionBeginFooterTemplateSettingId:\r\n    case ids.OverviewEndFooterTemplateSettingId:\r\n    case ids.VehicleDetectionEndFooterTemplateSettingId:\r\n      return value.map((v, j) => <p key={j}>{v}</p>);\r\n    case ids.CollageTrafficLightSettingId:\r\n      return <CollageTrafficLightViewer trafficLight={value}/>;\r\n    case ids.CollageRoadSignSettingId:\r\n      return <RoadSignViewer roadSign={value}/>;\r\n    case ids.CollageExportPathSettingId:\r\n      return value;\r\n    default:\r\n      return localizeText(value, capitalize);\r\n  }\r\n};\r\n\r\nconst CollageSettingValueViewer = ({className, settingId, isSettingValueInherited,\r\n  settingValue, parentSettingValue, violationTypeId}) => (\r\n  <div className={classNames('CollageSettingValueViewer', className)}>\r\n    {viewOfSettingValue(settingId, isSettingValueInherited, settingValue, parentSettingValue, violationTypeId)}\r\n  </div>\r\n);\r\n\r\nCollageSettingValueViewer.propTypes = {\r\n  className: PropTypes.string,\r\n  settingId: PropTypes.string.isRequired,\r\n  settingValue: PropTypes.any,\r\n  parentSettingValue: PropTypes.any,\r\n  isSettingValueInherited: PropTypes.bool,\r\n  violationTypeId: PropTypes.string.isRequired\r\n};\r\n\r\nCollageSettingValueViewer.defaultProps = {\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const setting = selectors.getCollageSetting(state, ownProps.settingId);\r\n  const parentSetting = selectors.getCollageSetting(state, setting.parentId);\r\n  const parentSettingValue = parentSetting ? parentSetting.value : null;\r\n  return {\r\n    settingValue: setting.value,\r\n    isSettingValueInherited: setting.isValueInherited,\r\n    violationTypeId: selectors.getSelectedViolationTypeId(state),\r\n    parentSettingValue\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CollageSettingValueViewer);\r\n"]}