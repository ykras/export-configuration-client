{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAM,6BAA6B,SAA7B,0BAA6B,QAAS;AAAA,MACnC,KADmC,GAGV,KAHU,CACnC,KADmC;AAAA,MAC5B,SAD4B,GAGV,KAHU,CAC5B,SAD4B;AAAA,MAGxC,0BAHwC,GAGV,KAHU,CAGxC,0BAHwC;;AAI1C,SACE;AAAA;AAAA,MAAK,OAAO,KAAZ,EAAmB,WAAW,0BAAW,4BAAX,EAAyC,SAAzC,CAA9B;AACE;AAAA;AAAA,QAAK,WAAU,iBAAf;AACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAK,WAAU,UAAf;AACE,yFAA4B,YAA5B,IAAuC,KAAvC;AADF;AADF,OADF;AAME;AAAA;AAAA,UAAK,WAAU,qBAAf;AACE;AAAA;AAAA,YAAK,WAAU,UAAf;AACG,qCAA2B,MAA3B,KAAsC,sBAAY,OAAlD,IAA6D;AADhE,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,qBAAf;AACG,qCAA2B,MAA3B,KAAsC,sBAAY,OAAlD,IAA6D;AADhE;AAJF,OANF;AAcE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE;AAAA;AAAA,YAAK,WAAU,UAAf;AACE;AADF,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,UAAf;AACG,qCAA2B,MAA3B,KAAsC,sBAAY,OAAlD,IAA6D;AADhE;AAJF;AAdF;AADF,GADF;AA2BD,CA/BD;;AAiCA,2BAA2B,SAA3B,GAAuC;AACrC,SAAO,iBAAU,MADoB;AAErC,aAAW,iBAAU,MAFgB;AAGrC,uBAAqB,iBAAU,OAAV,CAAkB,iBAAU,KAAV,CAAgB;AACrD,QAAI,iBAAU,MAAV,CAAiB,UADgC;AAErD,UAAM,iBAAU,MAAV,CAAiB;AAF8B,GAAhB,CAAlB,EAGjB,UANiC;AAOrC,4BAA0B,iBAAU,IAAV,CAAe,UAPJ;AAQrC,8BAA4B,iBAAU,MAAV,CAAiB,UARR;AASrC,2BAAyB,iBAAU,IAAV,CAAe,UATH;AAUrC,wBAAsB,iBAAU,MAAV,CAAiB;AAVF,CAAvC;;AAaA,2BAA2B,YAA3B,GAA0C;AACxC,SAAO,IADiC;AAExC,aAAW;AAF6B,CAA1C;;AAKA,IAAM,kBAAkB,SAAlB,eAAkB,QAAS;AAC/B,MAAM,uBAAuB,oBAAU,+BAAV,CAA0C,KAA1C,CAA7B;AACA,SAAO;AACL,yBAAqB,oBAAU,sBAAV,CAAiC,KAAjC,CADhB;AAEL,gCAA4B,oBAAU,UAAV,CAAqB,KAArB,EAA4B,uBAAa,mBAAb,CAAiC,oBAAjC,CAA5B,CAFvB;AAGL;AAHK,GAAP;AAKD,CAPD;;AASA,IAAM,gBAAgB,SAAhB,aAAgB;AAAA,SAAU;AAC9B,UAAM,MAAM,uBADkB;AAE9B,YAAQ,MAAM;AAFgB,GAAV;AAAA,CAAtB;;AAKA,IAAM,QAAQ,oBACZ,+BAAgB,iBAAK,sBAAL,CAAhB,EAA8C,aAA9C,CADY,EAEZ,+BAAgB,aAAhB,CAFY,EAGZ,0BAHY,CAAd;;kBAKe,yBAAQ,eAAR,qBAAyC,KAAzC,C","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport selectors from '../../store/selectors';\r\nimport actionCreators from '../../store/actions';\r\nimport './TrafficLightsSettingsPanel.css';\r\nimport classNames from 'classnames';\r\nimport RecognitionChannelSelector from '../RecognitionChannelSelector';\r\nimport OverviewPictureEditor from '../OverviewPictureEditor';\r\nimport requestTypes from '../../common/requestTypes';\r\nimport statusTypes from '../../common/statusTypes';\r\nimport OverviewPictureSizeLabel from '../OverviewPictureSizeLabel';\r\nimport OverviewPictureSelectedRectangleLabel from '../OverviewPictureSelectedRectangleLabel';\r\nimport TrafficLightSettingsTable from '../TrafficLightSettingsTable';\r\nimport withDataRequest from '../../higher_order_components/withDataFetch/withDataRequest';\r\nimport withDataRefresh from '../../higher_order_components/withDataFetch/withDataRefresh';\r\nimport {compose, prop} from 'ramda';\r\n\r\nconst TrafficLightsSettingsPanel = props => {\r\n  const {style, className,\r\n    // recognitionChannels, selectRecognitionChannel,\r\n    readOverviewPictureRequest} = props;\r\n  return (\r\n    <div style={style} className={classNames('TrafficLightsSettingsPanel', className)}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <RecognitionChannelSelector inline {...props}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"row margin-top-10px\">\r\n          <div className=\"col-sm-4\">\r\n            {readOverviewPictureRequest.status === statusTypes.Success && <OverviewPictureSizeLabel/>}\r\n          </div>\r\n          <div className=\"col-sm-5 text-right\">\r\n            {readOverviewPictureRequest.status === statusTypes.Success && <OverviewPictureSelectedRectangleLabel/>}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-9\">\r\n            <OverviewPictureEditor/>\r\n          </div>\r\n          <div className=\"col-sm-3\">\r\n            {readOverviewPictureRequest.status === statusTypes.Success && <TrafficLightSettingsTable/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTrafficLightsSettingsPanel.propTypes = {\r\n  style: PropTypes.object,\r\n  className: PropTypes.string,\r\n  recognitionChannels: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  selectRecognitionChannel: PropTypes.func.isRequired,\r\n  readOverviewPictureRequest: PropTypes.object.isRequired,\r\n  requestReadTrafficLight: PropTypes.func.isRequired,\r\n  recognitionChannelId: PropTypes.string.isRequired\r\n};\r\n\r\nTrafficLightsSettingsPanel.defaultProps = {\r\n  style: null,\r\n  className: null\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const recognitionChannelId = selectors.getSelectedRecognitionChannelId(state);\r\n  return {\r\n    recognitionChannels: selectors.getRecognitionChannels(state),\r\n    readOverviewPictureRequest: selectors.getRequest(state, requestTypes.readOverviewPicture(recognitionChannelId)),\r\n    recognitionChannelId\r\n  };\r\n};\r\n\r\nconst selectRequest = props => ({\r\n  send: props.requestReadTrafficLight,\r\n  params: props.recognitionChannelId\r\n});\r\n\r\nconst Panel = compose(\r\n  withDataRefresh(prop('recognitionChannelId'), selectRequest),\r\n  withDataRequest(selectRequest)\r\n)(TrafficLightsSettingsPanel);\r\n\r\nexport default connect(mapStateToProps, actionCreators)(Panel);\r\n"]}