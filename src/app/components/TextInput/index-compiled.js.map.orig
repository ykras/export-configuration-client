{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AAEA,IAAM,gBAAgB,kBAAM,UAAC,OAAD,EAAU,KAAV,EAAoB;AAC9C,MAAI,MAAM,GAAN,KAAc,OAAlB,EAA2B;AACzB;AACD;AACD,UAAQ,MAAM,MAAN,CAAa,KAArB;AACA,QAAM,cAAN;AACD,CANqB,CAAtB;;AAQA,IAAM,eAAe,kBAAM,UAAC,OAAD,EAAU,KAAV,EAAoB;AAC7C,UAAQ,MAAM,MAAN,CAAa,KAArB;AACA,QAAM,cAAN;AACD,CAHoB,CAArB;;AAKA,IAAM,iBAAiB,kBAAM,UAAC,OAAD,EAAU,KAAV,EAAoB;AAC/C,UAAQ,MAAM,MAAN,CAAa,KAArB;AACD,CAFsB,CAAvB;;AAIA,IAAM,YAAY,SAAZ,SAAY;AAAA,MAAE,KAAF,QAAE,KAAF;AAAA,MAAS,EAAT,QAAS,EAAT;AAAA,MAAa,IAAb,QAAa,IAAb;AAAA,MAAmB,WAAnB,QAAmB,WAAnB;AAAA,MAAgC,YAAhC,QAAgC,YAAhC;AAAA,MAA8C,KAA9C,QAA8C,KAA9C;AAAA,MAAqD,QAArD,QAAqD,QAArD;AAAA,MAA+D,aAA/D,QAA+D,aAA/D;AAAA,MAA8E,MAA9E,QAA8E,MAA9E;AAAA,MAAsF,SAAtF,QAAsF,SAAtF;AAAA,SAChB;AAAA;AAAA,MAAK,WAAW,0BAAW,WAAX,EAAwB,SAAxB,CAAhB;AACE;AAAA;AAAA,QAAK,WAAW,0BAAW,EAAC,eAAe,MAAhB,EAAX,CAAhB;AACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACG,gBAAQ;AAAA;AAAA,YAAO,SAAS,EAAhB;AAAqB;AAArB,SAAR,GAA8C,IADjD;AAEE;AACE,gBAAM,IADR;AAEE,qBAAU,cAFZ;AAGE,cAAI,EAHN;AAIE,uBAAa,WAJf;AAKE,wBAAc,YALhB;AAME,iBAAO,KANT;AAOE,qBAAW,cAAc,QAAd,CAPb;AAQE,kBAAQ,aAAa,QAAb,CARV;AASE,oBAAU,eAAe,aAAf;AATZ;AAFF;AADF;AADF,GADgB;AAAA,CAAlB;;AAqBA,UAAU,SAAV,GAAsB;AACpB,MAAI,iBAAU,MAAV,CAAiB,UADD;AAEpB,SAAO,iBAAU,MAFG;AAGpB,QAAM,iBAAU,KAAV,CAAgB,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,CAAhB,CAHc;AAIpB,eAAa,iBAAU,MAJH;AAKpB,gBAAc,iBAAU,MALJ;AAMpB,SAAO,iBAAU,MANG;AAOpB,YAAU,iBAAU,IAPA;AAQpB,iBAAe,iBAAU,IARL;AASpB,UAAQ,iBAAU,IATE;AAUpB,aAAW,iBAAU;AAVD,CAAtB;;AAaA,UAAU,YAAV,GAAyB;AACvB,SAAO,IADgB;AAEvB,QAAM,MAFiB;AAGvB,eAAa,EAHU;AAIvB,gBAAc,EAJS;AAKvB,SAAO,IALgB;AAMvB,YAAU,oBAAM,CAAE,CANK;AAOvB,iBAAe,yBAAM,CAAE,CAPA;AAQvB,UAAQ,KARe;AASvB,aAAW;AATY,CAAzB;;kBAYe,S","file":"index-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport React, {PropTypes} from 'react';\r\nimport './TextInput.css';\r\nimport classNames from 'classnames';\r\nimport {curry} from 'ramda';\r\n\r\nconst handleKeyDown = curry((handler, event) => {\r\n  if (event.key !== 'Enter') {\r\n    return;\r\n  }\r\n  handler(event.target.value);\r\n  event.preventDefault();\r\n});\r\n\r\nconst handleOnBlur = curry((handler, event) => {\r\n  handler(event.target.value);\r\n  event.preventDefault();\r\n});\r\n\r\nconst handleOnChange = curry((handler, event) => {\r\n  handler(event.target.value);\r\n});\r\n\r\nconst TextInput = ({label, id, type, placeholder, defaultValue, value, editText, onTextChanged, inline, className}) => (\r\n  <div className={classNames('TextInput', className)}>\r\n    <div className={classNames({'form-inline': inline})}>\r\n      <div className=\"form-group\">\r\n        {label ? <label htmlFor={id}>{label}</label> : null}\r\n        <input\r\n          type={type}\r\n          className=\"form-control\"\r\n          id={id}\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n          value={value}\r\n          onKeyDown={handleKeyDown(editText)}\r\n          onBlur={handleOnBlur(editText)}\r\n          onChange={handleOnChange(onTextChanged)}\r\n          />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  type: PropTypes.oneOf(['text', 'password', 'email']),\r\n  placeholder: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  value: PropTypes.string,\r\n  editText: PropTypes.func,\r\n  onTextChanged: PropTypes.func,\r\n  inline: PropTypes.bool,\r\n  className: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  label: null,\r\n  type: 'text',\r\n  placeholder: '',\r\n  defaultValue: '',\r\n  value: null,\r\n  editText: () => {},\r\n  onTextChanged: () => {},\r\n  inline: false,\r\n  className: null\r\n};\r\n\r\nexport default TextInput;\r\n"]}