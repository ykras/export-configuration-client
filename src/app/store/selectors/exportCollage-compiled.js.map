{"version":3,"sources":["exportCollage.js"],"names":[],"mappings":"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","file":"exportCollage-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport {curry, compose, find, propEq} from 'ramda';\r\nimport {startsWith} from 'lodash';\r\nimport ids, {collageRoadSignSettingIdPrefix} from '../identifiers';\r\nimport {getSelectedViolationTypeId} from './violationTypes';\r\n\r\nexport const getForegroundCollageObjectTypes = state =>\r\n  state.exportCollage.foregroundObjectTypes.ids.map(id => state.exportCollage.foregroundObjectTypes.byId[id]);\r\n\r\nconst getSelectedForegroundCollageObjectTypeId = state => state.ui.selectedForegroundCollageObjectTypeId;\r\n\r\nconst getForegroundCollageObjectType = curry((state, id) =>\r\n  state.exportCollage.foregroundObjectTypes.byId[id] || null);\r\n\r\nexport const getSelectedForegroundCollageObjectType = state => compose(\r\n  getForegroundCollageObjectType(state),\r\n  getSelectedForegroundCollageObjectTypeId\r\n)(state);\r\n\r\nexport const getCollage = state => state.exportCollage.collage;\r\n\r\nexport const getCollageImage = state => {\r\n  const collage = getCollage(state);\r\n  return collage ? collage.imageBase64 : null;\r\n};\r\n\r\nexport const getCollageSize = state => {\r\n  const collage = getCollage(state);\r\n  return collage ? {width: collage.widthInPixels, height: collage.heightInPixels} : {width: 0, height: 0};\r\n};\r\n\r\nexport const getCollageRecognitionChannelIds = state => {\r\n  const collage = getCollage(state);\r\n  return collage ? collage.recognitionChannelIds : [];\r\n};\r\n\r\nexport const getCollageSettingTypes = state =>\r\n  state.exportCollage.settingTypes.ids.map(id => state.exportCollage.settingTypes.byId[id]);\r\n\r\nexport const getSelectedCollageSettingTypeId = state => state.ui.selectedCollageSettingTypeId;\r\n\r\nconst getCollageSettingType = curry((state, id) =>\r\n  state.exportCollage.settingTypes.byId[id] || null);\r\n\r\nexport const getSelectedCollageSettingType = state => compose(\r\n  getCollageSettingType(state),\r\n  getSelectedCollageSettingTypeId\r\n)(state);\r\n\r\nexport const getCollageSettings = state =>\r\n  state.exportCollage.settings.ids.map(id => state.exportCollage.settings.byId[id]);\r\n\r\nexport const getCollageExportPath = state =>\r\n  state.exportCollage.settings.byId[ids.CollageExportPathSettingId].value;\r\n\r\nexport const getCollageSetting = (state, id) =>\r\n  id ? state.exportCollage.settings.byId[id] || null : null;\r\n\r\nexport const isCollageSettingSelected = (state, id) => {\r\n  const collageSetting = getCollageSetting(state, id);\r\n  return collageSetting ? collageSetting.isSelected : false;\r\n};\r\n\r\nexport const getCollageVideoExportModes = state =>\r\n  state.exportCollage.videoExportModes.ids.map(id => state.exportCollage.videoExportModes.byId[id]);\r\n\r\nexport const getSelectedCollageVideoExportModeId = state => state.ui.selectedCollageVideoExportModeId;\r\n\r\nconst getCollageVideoExportMode = curry((state, id) => state.exportCollage.videoExportModes.byId[id] || null);\r\n\r\nexport const getSelectedCollageVideoExportMode = state => compose(\r\n  getCollageVideoExportMode(state),\r\n  getSelectedCollageVideoExportModeId\r\n)(state);\r\n\r\nexport const getCollageVideoExportSecondsBeforeCheckTime = state => {\r\n  const setting = state.exportCollage.settings.byId[ids.VideoSecondsBeforeCheckTimeSettingId];\r\n  return setting ? setting.value : null;\r\n};\r\n\r\nexport const getCollageVideoExportSecondsAfterCheckTime = state => {\r\n  const setting = state.exportCollage.settings.byId[ids.VideoSecondsAfterCheckTimeSettingId];\r\n  return setting ? setting.value : null;\r\n};\r\n\r\nexport const getCollageDefaultFont = state => {\r\n  const setting = state.exportCollage.settings.byId[ids.CollageDefaultFontSettingId];\r\n  return setting ? setting.value : null;\r\n};\r\n\r\n// const getCollageTrafficLights = state => {\r\n//   const violationTypeId = getSelectedViolationTypeId(state);\r\n//   const tlIdPrefix = collageTrafficLightSettingIdPrefix(violationTypeId);\r\n//   return getCollageSettings(state).filter(s => startsWith(s.id, tlIdPrefix));\r\n// };\r\n//\r\n// const getNumberOfCollageTrafficLights = state => getCollageTrafficLights(state).length;\r\n//\r\n// export const getNextCollageTrafficLightNumber = state => getNumberOfCollageTrafficLights(state) + 1;\r\n\r\nexport const getCollagePictureTypes = state =>\r\n  state.exportCollage.pictureTypes.ids.map(id => state.exportCollage.pictureTypes.byId[id]);\r\n\r\nexport const getCollagePictureTypeId = curry((state, pictureTypeName) =>\r\n  find(propEq('name', pictureTypeName))(getCollagePictureTypes(state)).id);\r\n\r\nexport const getCollagePictureTypeName = curry((state, pictureTypeId) =>\r\n  find(propEq('id', pictureTypeId))(getCollagePictureTypes(state)).name);\r\n\r\nexport const getCollageSelectedRectangle = state => state.exportCollage.collageSelectedRectangle;\r\n\r\nexport const getCollageRoadSigns = state => {\r\n  const violationTypeId = getSelectedViolationTypeId(state);\r\n  const rsIdPrefix = collageRoadSignSettingIdPrefix(violationTypeId);\r\n  return getCollageSettings(state).filter(s => startsWith(s.id, rsIdPrefix));\r\n};\r\n"]}