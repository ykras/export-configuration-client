{"version":3,"sources":["exportCollage.js"],"names":[],"mappings":"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","file":"exportCollage-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport actionTypes from '../actionTypes';\r\nimport factory from '../factory';\r\nimport ids from '../identifiers';\r\nimport collageSettingTypes from '../../common/collageSettingTypes';\r\nimport {find, concat} from 'lodash';\r\nimport {assocPath, union, merge, append, without, dissoc} from 'ramda';\r\n\r\nexport const pictureTypes = {\r\n  byId: (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceCollagePictureTypes:\r\n        return payload.pictureTypes || state;\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  ids: (state = [], {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceCollagePictureTypes:\r\n        return payload.pictureTypeIds || state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const foregroundObjectTypes = {\r\n  byId: (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceForegroundCollageObjectTypes:\r\n        return payload.foregroundObjectTypes || state;\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  ids: (state = [], {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceForegroundCollageObjectTypes:\r\n        return payload.foregroundObjectTypeIds || state;\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  selectedId: (state = null, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.SelectForegroundCollageObjectType:\r\n        return payload.id || state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const settingTypes = {\r\n  byId: (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.PrependCollageSettingTypes:\r\n      case actionTypes.AppendCollageSettingTypes:\r\n        return merge(state, payload.settingTypes);\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  ids: (state = [], {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.PrependCollageSettingTypes:\r\n        return concat(payload.settingTypeIds, state);\r\n      case actionTypes.AppendCollageSettingTypes:\r\n        return concat(state, payload.settingTypeIds);\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  selectedId: (state = null, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.SelectCollageSettingType:\r\n        return payload.id || state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst initialSettings = factory.createCollageSettings();\r\n\r\nexport const settings = {\r\n  ids: (state = initialSettings.ids, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceCollageFooterTemplates:\r\n        return union(state, payload.collageFooterTemplateIds);\r\n      case actionTypes.ReplaceCollageTrafficLights:\r\n        return union(state, payload.collageTrafficLightIds);\r\n      case actionTypes.ReplaceCollageRoadSigns:\r\n        return union(state, payload.collageRoadSignIds);\r\n      case actionTypes.AddCollageTrafficLight:\r\n        return append(payload.trafficLightSettingId, state);\r\n      case actionTypes.AddCollageRoadSign:\r\n        return append(payload.roadSignSettingId, state);\r\n      case actionTypes.DeleteCollageSetting:\r\n        return without(payload.settingId, state);\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  byId: (state = initialSettings.byId, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.PrependCollageSettingTypes: {\r\n        const allViolationsSettingTypeId = find(payload.settingTypes, t => t.name === collageSettingTypes.AllViolations).id;\r\n        const currentViolationSettingTypeId = find(payload.settingTypes, t => t.name === collageSettingTypes.CurrentViolation).id;\r\n        let nextState = assocPath([ids.VideoExportModeSettingId, 'typeId'], allViolationsSettingTypeId, state);\r\n        nextState = assocPath([ids.VideoSecondsBeforeCheckTimeSettingId, 'typeId'], allViolationsSettingTypeId, nextState);\r\n        nextState = assocPath([ids.VideoSecondsAfterCheckTimeSettingId, 'typeId'], allViolationsSettingTypeId, nextState);\r\n        nextState = assocPath([ids.CollageDefaultFontSettingId, 'typeId'], allViolationsSettingTypeId, nextState);\r\n        nextState = assocPath([ids.CollageExportPathSettingId, 'typeId'], allViolationsSettingTypeId, nextState);\r\n        nextState = assocPath([ids.CollageViolationFontSettingId, 'typeId'], currentViolationSettingTypeId, nextState);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.SelectCollageVideoExportMode:\r\n        return assocPath([ids.VideoExportModeSettingId, 'value'], payload.name, state);\r\n      case actionTypes.BeginCollageEditing:\r\n        return assocPath([payload.settingId, 'isEditing'], true, state);\r\n      case actionTypes.FinishCollageEditing:\r\n        return assocPath([payload.settingId, 'isEditing'], false, state);\r\n      case actionTypes.ReplaceCollageVideoExportSettings: {\r\n        let nextState = assocPath([ids.VideoSecondsBeforeCheckTimeSettingId, 'value'], payload.videoSecondsBeforeCheckTime, state);\r\n        nextState = assocPath([ids.VideoSecondsAfterCheckTimeSettingId, 'value'], payload.videoSecondsAfterCheckTime, nextState);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageVideoSecondsBeforeCheckTime: {\r\n        const nextState = assocPath([ids.VideoSecondsBeforeCheckTimeSettingId, 'value'], payload.seconds, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageVideoSecondsAfterCheckTime: {\r\n        const nextState = assocPath([ids.VideoSecondsAfterCheckTimeSettingId, 'value'], payload.seconds, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageDefaultFont: {\r\n        const nextState = assocPath([ids.CollageDefaultFontSettingId, 'value'], payload, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageSettingValueInheritance: {\r\n        const nextState = assocPath([payload.settingId, 'isValueInherited'], payload.isSettingValueInherited, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageExportPath: {\r\n        const nextState = assocPath([ids.CollageExportPathSettingId, 'value'], payload.exportPath, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageFont: {\r\n        const nextState = assocPath([ids.CollageViolationFontSettingId, 'value', payload.violationTypeId], payload.font, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.ReplaceCollageFooterTemplates: {\r\n        let nextState = {...state};\r\n        payload.collageFooterTemplates.forEach(t => {\r\n          nextState = assocPath([t.id], t, nextState);\r\n        });\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.ReplaceCollageTrafficLights: {\r\n        let nextState = {...state};\r\n        payload.collageTrafficLights.forEach(tl => {\r\n          const isSelected = nextState[tl.id] ? nextState[tl.id].isSelected : false;\r\n          nextState = assocPath([tl.id], tl, nextState);\r\n          nextState[tl.id].isSelected = isSelected;\r\n        });\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.ReplaceCollageRoadSigns: {\r\n        let nextState = {...state};\r\n        payload.collageRoadSigns.forEach(rs => {\r\n          nextState = assocPath([rs.id], rs, nextState);\r\n        });\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.UpdateCollageFooterTemplate: {\r\n        const nextState = assocPath([payload.footerTemplateSettingId, 'value'], payload.footerLines, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.AddCollageTrafficLight:\r\n        return assocPath([payload.trafficLightSettingId], payload.trafficLightSetting, state);\r\n      case actionTypes.AddCollageRoadSign:\r\n        return assocPath([payload.roadSignSettingId], payload.roadSignSetting, state);\r\n      case actionTypes.UpdateCollageSettingSelection: {\r\n        const nextState = assocPath([payload.settingId, 'isSelected'], payload.settingSelected, state);\r\n        return nextState || state;\r\n      }\r\n      case actionTypes.DeleteCollageSetting:\r\n        return dissoc(payload.settingId, state);\r\n      case actionTypes.UpdateCollageTrafficLight:\r\n        return assocPath([payload.trafficLightSettingId, 'value'], payload.trafficLightSettingValue, state);\r\n      case actionTypes.UpdateCollageRoadSign:\r\n        return assocPath([payload.roadSignSettingId, 'value'], payload.roadSignSettingValue, state);\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const videoExportModes = {\r\n  byId: (state = {}, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceCollageVideoExportModes:\r\n        return payload.videoExportModes || state;\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  ids: (state = [], {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.ReplaceCollageVideoExportModes:\r\n        return payload.videoExportModeIds || state;\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  selectedId: (state = null, {type, payload}) => {\r\n    switch (type) {\r\n      case actionTypes.SelectCollageVideoExportMode:\r\n        return payload.id || state;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const collage = (state = null, {type, payload}) => {\r\n  switch (type) {\r\n    case actionTypes.ReplaceCollage:\r\n      return payload.collage || state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const selectedRectangle = (state = null, {type, payload}) => {\r\n  switch (type) {\r\n    case actionTypes.UpdateCollageSelectedRectangle:\r\n      return payload.selectedRectangle || state;\r\n    case actionTypes.DeleteCollageSelectedRectangle:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]}