{"version":3,"sources":["trafficLights.js"],"names":[],"mappings":"AAAA;;;;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAM,0FAAyC,SAAzC,sCAAyC;AAAA,SAAsB;AAC1E,UAAM,sBAAY,sCADwD;AAE1E,aAAS,EAAC,oCAAD;AAFiE,GAAtB;AAAA,CAA/C;;AAKA,IAAM,0FAAyC,SAAzC,sCAAyC;AAAA,SAAO;AAC3D,UAAM,sBAAY;AADyC,GAAP;AAAA,CAA/C;;AAIP,IAAM,yBAAyB,SAAzB,sBAAyB;AAAA,SAAW,oBAAY;AACpD,aAAS;AACP,YAAM,sBAAY,sBADX;AAEP,eAAS,EAAC,gBAAD;AAFF,KAAT;AAIA,aAAS,wCAAT;AACD,GAN8B;AAAA,CAA/B;;AAQO,IAAM,kEAA6B,gCAAmB;AAC3D,WAAS,cAAI,mBAD8C;AAE3D,OAAK,aAAC,CAAD,EAAI,oBAAJ;AAAA,WAA6B,uBAAa,mBAAb,CAAiC,oBAAjC,CAA7B;AAAA,GAFsD;AAG3D,WAAS,CAAC,sBAAD,CAHkD;AAI3D,WAAS,CAAC,sCAAD;AAJkD,CAAnB,CAAnC;;AAOP,IAAM,sBAAsB,SAAtB,mBAAsB,OAAiB;AAAA,MAAf,EAAe,QAAf,EAAe;AAAA,MAAX,KAAW,QAAX,KAAW;;AAC3C,MAAM,YAAY,wCAAsB,EAAtB,CAAlB;AACA,MAAM,eAAe,EAAC,IAAI,SAAL,EAAgB,MAAM,mCAAa,iCAAnC;AACnB,gBADmB,EACZ,cAAc,sBAAI,wBADN,EACgC,WAAW,KAD3C,EAArB;AAEA,SAAO;AACL,UAAM,sBAAY,mBADb;AAEL,aAAS,EAAC,oBAAD,EAAY,0BAAZ;AAFJ,GAAP;AAID,CARD;;AAUO,IAAM,4DAA0B,gCAAmB;AACxD,WAAS,cAAI,gBAD2C;AAExD,OAAK,aAAC,CAAD,EAAI,oBAAJ;AAAA,WAA6B,uBAAa,gBAAb,CAA8B,oBAA9B,CAA7B;AAAA,GAFmD;AAGxD,WAAS,CAAC,mBAAD;AAH+C,CAAnB,CAAhC;;AAMA,IAAM,8DAA2B,SAA3B,wBAA2B;AAAA,SAAc;AACpD,UAAM,sBAAY,wBADkC;AAEpD,aAAS,EAAC,oBAAD;AAF2C,GAAd;AAAA,CAAjC;;AAKA,IAAM,gEAA4B,SAA5B,yBAA4B;AAAA,SAAc;AACrD,UAAM,sBAAY,yBADmC;AAErD,aAAS,EAAC,oBAAD;AAF4C,GAAd;AAAA,CAAlC;;AAKA,IAAM,kDAAqB,SAArB,kBAAqB,CAAC,SAAD,EAAY,YAAZ;AAAA,SAA8B;AAC9D,UAAM,sBAAY,kBAD4C;AAE9D,aAAS,EAAC,oBAAD,EAAY,0BAAZ;AAFqD,GAA9B;AAAA,CAA3B;;AAKA,IAAM,gEAA4B,gCAAmB;AAC1D,WAAS,cAAI,kBAD6C;AAE1D,OAAK,aAAC,CAAD,EAAI,oBAAJ;AAAA,WAA6B,uBAAa,kBAAb,CAAgC,oBAAhC,CAA7B;AAAA;AAFqD,CAAnB,CAAlC","file":"trafficLights-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport actionTypes from '../actionTypes';\r\nimport {createRequestThunk} from './common';\r\nimport api from '../../api';\r\nimport requestTypes from '../../common/requestTypes';\r\nimport settingNames from '../../common/trafficLightSettingNames';\r\nimport ids, {trafficLightSettingId} from '../../store/identifiers';\r\n\r\nexport const updateOverviewPictureSelectedRectangle = selectedRectangle => ({\r\n  type: actionTypes.UpdateOverviewPictureSelectedRectangle,\r\n  payload: {selectedRectangle}\r\n});\r\n\r\nexport const deleteOverviewPictureSelectedRectangle = () => ({\r\n  type: actionTypes.DeleteOverviewPictureSelectedRectangle\r\n});\r\n\r\nconst replaceOverviewPicture = picture => dispatch => {\r\n  dispatch({\r\n    type: actionTypes.ReplaceOverviewPicture,\r\n    payload: {picture}\r\n  });\r\n  dispatch(deleteOverviewPictureSelectedRectangle());\r\n};\r\n\r\nexport const requestReadOverviewPicture = createRequestThunk({\r\n  request: api.readOverviewPicture,\r\n  key: (_, recognitionChannelId) => requestTypes.readOverviewPicture(recognitionChannelId),\r\n  success: [replaceOverviewPicture],\r\n  failure: [deleteOverviewPictureSelectedRectangle]\r\n});\r\n\r\nconst replaceTrafficLight = ({id, value}) => {\r\n  const settingId = trafficLightSettingId(id);\r\n  const settingValue = {id: settingId, name: settingNames.TrafficLightSourcePositionAndSize,\r\n    value, editorTypeId: ids.TrafficLightEditorTypeId, isEditing: false};\r\n  return {\r\n    type: actionTypes.ReplaceTrafficLight,\r\n    payload: {settingId, settingValue}\r\n  };\r\n};\r\n\r\nexport const requestReadTrafficLight = createRequestThunk({\r\n  request: api.readTrafficLight,\r\n  key: (_, recognitionChannelId) => requestTypes.readTrafficLight(recognitionChannelId),\r\n  success: [replaceTrafficLight]\r\n});\r\n\r\nexport const beginTrafficLightEditing = settingId => ({\r\n  type: actionTypes.BeginTrafficLightEditing,\r\n  payload: {settingId}\r\n});\r\n\r\nexport const finishTrafficLightEditing = settingId => ({\r\n  type: actionTypes.FinishTrafficLightEditing,\r\n  payload: {settingId}\r\n});\r\n\r\nexport const updateTrafficLight = (settingId, settingValue) => ({\r\n  type: actionTypes.UpdateTrafficLight,\r\n  payload: {settingId, settingValue}\r\n});\r\n\r\nexport const requestUpdateTrafficLight = createRequestThunk({\r\n  request: api.updateTrafficLight,\r\n  key: (_, recognitionChannelId) => requestTypes.updateTrafficLight(recognitionChannelId)\r\n});\r\n"]}