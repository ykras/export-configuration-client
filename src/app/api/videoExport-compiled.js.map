{"version":3,"sources":["videoExport.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;AACA;;AAEA,IAAM,kBAAkB,sBAAW,kBAAX,CAAxB;;AAEA,IAAM,4BAA4B,SAA5B,yBAA4B;AAAA,SAAQ,0BAAU,IAAV,EAAgB,wBAAQ,eAAR,CAAhB,CAAR;AAAA,CAAlC;;AAEA,IAAM,yBAAyB,SAAzB,sBAAyB;AAAA,MAAa,gBAAb,QAAE,QAAF,CAAa,gBAAb;AAAA,MAAwC,kBAAxC,QAAgC,MAAhC;AAAA,SAAiE;AAC9F,sCAD8F;AAE9F;AAF8F,GAAjE;AAAA,CAA/B;;kBAKe;AACb,wBAAsB;AAAA,QAAC,OAAD,uEAAW,EAAX;AAAA,QAAe,YAAf;AAAA,WACpB,sBAAa,OAAb,yBAAwC,YAAxC,aACG,IADH,CACQ,yBADR,EAEG,IAFH,CAEQ,sBAFR,CADoB;AAAA,GADT;AAKb,8BAA4B;AAAA,QAAC,OAAD,uEAAW,EAAX;AAAA,QAAe,YAAf;AAAA,WAC1B,sBAAa,OAAb,yBAAwC,YAAxC,oBAD0B;AAAA,GALf;AAOb,gCAA8B;AAAA,QAAC,OAAD,uEAAW,EAAX;AAAA,QAAe,YAAf;AAAA,QAA6B,iBAA7B;AAAA,WAC5B,sBAAa,OAAb,yBAAwC,YAAxC,qBACE;AACE,cAAQ,KADV;AAEE,YAAM,KAAK,SAAL,CAAe,iBAAf;AAFR,KADF,CAD4B;AAAA,GAPjB;AAab,2BAAyB;AAAA,QAAC,OAAD,uEAAW,EAAX;AAAA,QAAe,YAAf;AAAA,WACvB,sBAAa,OAAb,yBAAwC,YAAxC,eADuB;AAAA,GAbZ;AAeb,6BAA2B;AAAA,QAAC,OAAD,uEAAW,EAAX;AAAA,QAAe,YAAf;AAAA,QAA6B,mBAA7B;AAAA,WACzB,sBAAa,OAAb,yBAAwC,YAAxC,gBACE;AACE,cAAQ,KADV;AAEE,YAAM,KAAK,SAAL,CAAe,mBAAf;AAFR,KADF,CADyB;AAAA;AAfd,C","file":"videoExport-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport {fetchJson} from './utils';\r\nimport {normalize, Schema, arrayOf} from 'normalizr';\r\n\r\nconst videoExportMode = new Schema('videoExportModes');\r\n\r\nconst normalizeVideoExportModes = data => normalize(data, arrayOf(videoExportMode));\r\n\r\nconst returnVideoExportModes = ({entities: {videoExportModes}, result: videoExportModeIds}) => ({\r\n  videoExportModes,\r\n  videoExportModeIds\r\n});\r\n\r\nexport default {\r\n  readVideoExportModes: (baseUrl = '', exportTypeId) =>\r\n    fetchJson(`${baseUrl}/api/videoExport/${exportTypeId}/modes`)\r\n      .then(normalizeVideoExportModes)\r\n      .then(returnVideoExportModes),\r\n  readCurrentVideoExportMode: (baseUrl = '', exportTypeId) =>\r\n    fetchJson(`${baseUrl}/api/videoExport/${exportTypeId}/modes/current`),\r\n  updateCurrentVideoExportMode: (baseUrl = '', exportTypeId, videoExportModeId) =>\r\n    fetchJson(`${baseUrl}/api/videoExport/${exportTypeId}/modes/current`,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify(videoExportModeId)\r\n      }),\r\n  readVideoExportSettings: (baseUrl = '', exportTypeId) =>\r\n    fetchJson(`${baseUrl}/api/videoExport/${exportTypeId}/settings`),\r\n  updateVideoExportSettings: (baseUrl = '', exportTypeId, videoExportSettings) =>\r\n    fetchJson(`${baseUrl}/api/videoExport/${exportTypeId}/settings`,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify(videoExportSettings)\r\n      })\r\n};\r\n"]}