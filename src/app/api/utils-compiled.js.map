{"version":3,"sources":["utils.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;AAEA,IAAM,eAAe,SAAf,YAAe,MAAO;AAC1B,MAAI,IAAI,EAAR,EAAY;AACV,WAAO,GAAP;AACD;AACD,QAAM,IAAI,KAAJ,CAAU,IAAI,UAAJ,IAAkB,IAAI,MAAhC,CAAN;AACD,CALD;;AAOA,IAAM,UAAU,SAAV,OAAU;AAAA,SAAO,IAAI,IAAJ,EAAP;AAAA,CAAhB;;AAEA,IAAM,SAAS,SAAT,MAAS;AAAA,SAAQ,QAAQ,KAAK,MAAb,GAAsB,KAAK,KAAL,CAAW,IAAX,CAAtB,GAAyC,EAAjD;AAAA,CAAf;;AAEO,IAAM,gCAAY,SAAZ,SAAY,CAAC,GAAD,EAAuB;AAAA,MAAjB,OAAiB,uEAAP,EAAO;;AAC9C,SAAO,MAAM,GAAN,eACF,OADE;AAEL,0BACK,QAAQ,OADb;AAEE,gBAAU,kBAFZ;AAGE,sBAAgB;AAHlB;AAFK,MAQJ,IARI,CAQC,YARD,EASJ,IATI,CASC,OATD,EAUJ,IAVI,CAUC,MAVD,CAAP;AAWD,CAZM","file":"utils-compiled.js","sourcesContent":["'use strict';\r\n\r\nimport 'isomorphic-fetch';\r\nimport 'es6-promise/auto';\r\n\r\nconst rejectErrors = res => {\r\n  if (res.ok) {\r\n    return res;\r\n  }\r\n  throw new Error(res.statusText || res.status);\r\n};\r\n\r\nconst getText = res => res.text();\r\n\r\nconst toJson = text => text && text.length ? JSON.parse(text) : {};\r\n\r\nexport const fetchJson = (url, options = {}) => {\r\n  return fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      ...options.headers,\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n    .then(rejectErrors)\r\n    .then(getText)\r\n    .then(toJson);\r\n};\r\n"]}